var searchIndex = {};
searchIndex["rdkafka"] = {"doc":"rust-rdkafka A fully asynchronous, [futures]-based Kafka client library for Rust based on [librdkafka].","items":[[0,"types","rdkafka","This module contains type aliases for types defined in the auto-generated bindings.",null,null],[6,"RDKafka","rdkafka::types","Native rdkafka client",null,null],[6,"RDKafkaConf","","Native rdkafka configuration",null,null],[6,"RDKafkaMessage","","Native rdkafka message",null,null],[6,"RDKafkaTopic","","Native rdkafka topic",null,null],[6,"RDKafkaTopicConf","","Native rdkafka topic configuration",null,null],[6,"RDKafkaTopicPartition","","Native rdkafka topic partition",null,null],[6,"RDKafkaTopicPartitionList","","Native rdkafka topic partition list",null,null],[6,"RDKafkaMetadata","","Native rdkafka metadata container",null,null],[6,"RDKafkaMetadataTopic","","Native rdkafka topic information",null,null],[6,"RDKafkaMetadataPartition","","Native rdkafka partition information",null,null],[6,"RDKafkaMetadataBroker","","Native rdkafka broker information",null,null],[6,"RDKafkaState","","Native rdkafka state",null,null],[6,"RDKafkaGroupList","","Native rdkafka list of groups",null,null],[6,"RDKafkaGroupInfo","","Native rdkafka group information",null,null],[6,"RDKafkaGroupMemberInfo","","Native rdkafka group member information",null,null],[4,"RDKafkaError","","Errors enum Error from the underlying rdkafka library.",null,null],[13,"BadMessage","","Received message is incorrect",0,null],[13,"BadCompression","","Bad/unknown compression",0,null],[13,"BrokerDestroy","","Broker is going away",0,null],[13,"Fail","","Generic failure",0,null],[13,"BrokerTransportFailure","","Broker transport failure",0,null],[13,"CriticalSystemResource","","Critical system resource",0,null],[13,"Resolve","","Failed to resolve broker",0,null],[13,"MessageTimedOut","","Produced message timed out",0,null],[13,"PartitionEOF","","Reached the end of the topic+partition queue on the broker. Not really an error.",0,null],[13,"UnknownPartition","","Permanent: Partition does not exist in cluster.",0,null],[13,"FileSystem","","File or filesystem error",0,null],[13,"UnknownTopic","","Permanent: Topic does not exist in cluster.",0,null],[13,"AllBrokersDown","","All broker connections are down.",0,null],[13,"InvalidArgument","","Invalid argument, or invalid configuration",0,null],[13,"OperationTimedOut","","Operation timed out",0,null],[13,"QueueFull","","Queue is full",0,null],[13,"ISRInsufficient","","ISR count < required.acks",0,null],[13,"NodeUpdate","","Broker node update",0,null],[13,"SSL","","SSL error",0,null],[13,"WaitingForCoordinator","","Waiting for coordinator to become available.",0,null],[13,"UnknownGroup","","Unknown client group",0,null],[13,"InProgress","","Operation in progress",0,null],[13,"PreviousInProgress","","Previous operation in progress, wait for it to finish.",0,null],[13,"ExistingSubscription","","This operation would interfere with an existing subscription",0,null],[13,"AssignPartitions","","Assigned partitions (rebalance_cb)",0,null],[13,"RevokePartitions","","Revoked partitions (rebalance_cb)",0,null],[13,"Conflict","","Conflicting use",0,null],[13,"State","","Wrong state",0,null],[13,"UnknownProtocol","","Unknown protocol",0,null],[13,"NotImplemented","","Not implemented",0,null],[13,"Authentication","","Authentication failure",0,null],[13,"NoOffset","","No stored offset",0,null],[13,"Outdated","","Outdated",0,null],[13,"TimedOutQueue","","Timed out in queue",0,null],[13,"UnsupportedFeature","","Feature not supported by broker",0,null],[13,"WaitCache","","Awaiting cache update",0,null],[13,"Interrupted","","Operation interrupted (e.g., due to yield))",0,null],[13,"KeySerialization","","Key serialization error",0,null],[13,"ValueSerialization","","Value serialization error",0,null],[13,"KeyDeserialization","","Key deserialization error",0,null],[13,"ValueDeserialization","","Value deserialization error",0,null],[13,"Unknown","","Unknown broker error",0,null],[13,"NoError","","Success",0,null],[13,"OffsetOutOfRange","","Offset out of range",0,null],[13,"InvalidMessage","","Invalid message",0,null],[13,"UnknownTopicOrPartition","","Unknown topic or partition",0,null],[13,"InvalidMessageSize","","Invalid message size",0,null],[13,"LeaderNotAvailable","","Leader not available",0,null],[13,"NotLeaderForPartition","","Not leader for partition",0,null],[13,"RequestTimedOut","","Request timed out",0,null],[13,"BrokerNotAvailable","","Broker not available",0,null],[13,"ReplicaNotAvailable","","Replica not available",0,null],[13,"MessageSizeTooLarge","","Message size too large",0,null],[13,"StaleControllerEpoch","","Stale controller epoch code",0,null],[13,"OffsetMetadataTooLarge","","Offset metadata string too large",0,null],[13,"NetworkException","","Broker disconnected before response received",0,null],[13,"GroupLoadInProgress","","Group coordinator load in progress",0,null],[13,"GroupCoordinatorNotAvailable","","Group coordinator not available",0,null],[13,"NotCoordinatorForGroup","","Not coordinator for group",0,null],[13,"InvalidTopic","","Invalid topic",0,null],[13,"MessageBatchTooLarge","","Message batch larger than configured server segment size",0,null],[13,"NotEnoughReplicas","","Not enough in-sync replicas",0,null],[13,"NotEnoughReplicasAfterAppend","","Message(s) written to insufficient number of in-sync replicas",0,null],[13,"InvalidRequiredAcks","","Invalid required acks value",0,null],[13,"IllegalGeneration","","Specified group generation id is not valid",0,null],[13,"InconsistentGroupProtocol","","Inconsistent group protocol",0,null],[13,"InvalidGroupId","","Invalid group.id",0,null],[13,"UnknownMemberId","","Unknown member",0,null],[13,"InvalidSessionTimeout","","Invalid session timeout",0,null],[13,"RebalanceInProgress","","Group rebalance in progress",0,null],[13,"InvalidCommitOffsetSize","","Commit offset data size is not valid",0,null],[13,"TopicAuthorizationFailed","","Topic authorization failed",0,null],[13,"GroupAuthorizationFailed","","Group authorization failed",0,null],[13,"ClusterAuthorizationFailed","","Cluster authorization failed",0,null],[13,"InvalidTimestamp","","Invalid timestamp",0,null],[13,"UnsupportedSASLMechanism","","Unsupported SASL mechanism",0,null],[13,"IllegalSASLState","","Illegal SASL state",0,null],[13,"UnsupportedVersion","","Unsupported version",0,null],[13,"TopicAlreadyExists","","Topic already exists",0,null],[13,"InvalidPartitions","","Invalid number of partitions",0,null],[13,"InvalidReplicationFactor","","Invalid replication factor",0,null],[13,"InvalidReplicaAssignment","","Invalid replica assignment",0,null],[13,"InvalidConfig","","Invalid config */",0,null],[13,"NotController","","Not controller for cluster",0,null],[13,"InvalidRequest","","Invalid request",0,null],[13,"UnsupportedForMessageFormat","","Message format on broker does not support request",0,null],[13,"PolicyViolation","","Policy violation",0,null],[13,"OutOfOrderSequenceNumber","","Broker received an out of order sequence number",0,null],[13,"DuplicateSequenceNumber","","Broker received a duplicate sequence number",0,null],[13,"InvalidProducerEpoch","","Producer attempted an operation with an old epoch",0,null],[13,"InvalidTransactionalState","","Producer attempted a transactional operation in an invalid state",0,null],[13,"InvalidProducerIdMapping","","Producer attempted to use a producer id which is currently assigned to its transactional id",0,null],[13,"InvalidTransactionTimeout","","Transaction timeout is larger than the maxi value allowed by the broker's max.transaction.timeout.ms",0,null],[13,"ConcurrentTransactions","","Producer attempted to update a transaction while another concurrent operation on the same transaction was ongoing",0,null],[13,"TransactionCoordinatorFenced","","Indicates that the transaction coordinator sending a WriteTxnMarker is no longer the current coordinator for a given producer",0,null],[13,"TransactionalIdAuthorizationFailed","","Transactional Id authorization failed",0,null],[13,"SecurityDisabled","","Security features are disabled",0,null],[13,"OperationNotAttempted","","Operation not attempted",0,null],[4,"rd_kafka_type_t","","",null,null],[13,"RD_KAFKA_PRODUCER","","",1,null],[13,"RD_KAFKA_CONSUMER","","",1,null],[4,"rd_kafka_conf_res_t","","",null,null],[13,"RD_KAFKA_CONF_UNKNOWN","","",2,null],[13,"RD_KAFKA_CONF_INVALID","","",2,null],[13,"RD_KAFKA_CONF_OK","","",2,null],[4,"rd_kafka_resp_err_t","","",null,null],[13,"RD_KAFKA_RESP_ERR__BEGIN","","",3,null],[13,"RD_KAFKA_RESP_ERR__BAD_MSG","","",3,null],[13,"RD_KAFKA_RESP_ERR__BAD_COMPRESSION","","",3,null],[13,"RD_KAFKA_RESP_ERR__DESTROY","","",3,null],[13,"RD_KAFKA_RESP_ERR__FAIL","","",3,null],[13,"RD_KAFKA_RESP_ERR__TRANSPORT","","",3,null],[13,"RD_KAFKA_RESP_ERR__CRIT_SYS_RESOURCE","","",3,null],[13,"RD_KAFKA_RESP_ERR__RESOLVE","","",3,null],[13,"RD_KAFKA_RESP_ERR__MSG_TIMED_OUT","","",3,null],[13,"RD_KAFKA_RESP_ERR__PARTITION_EOF","","",3,null],[13,"RD_KAFKA_RESP_ERR__UNKNOWN_PARTITION","","",3,null],[13,"RD_KAFKA_RESP_ERR__FS","","",3,null],[13,"RD_KAFKA_RESP_ERR__UNKNOWN_TOPIC","","",3,null],[13,"RD_KAFKA_RESP_ERR__ALL_BROKERS_DOWN","","",3,null],[13,"RD_KAFKA_RESP_ERR__INVALID_ARG","","",3,null],[13,"RD_KAFKA_RESP_ERR__TIMED_OUT","","",3,null],[13,"RD_KAFKA_RESP_ERR__QUEUE_FULL","","",3,null],[13,"RD_KAFKA_RESP_ERR__ISR_INSUFF","","",3,null],[13,"RD_KAFKA_RESP_ERR__NODE_UPDATE","","",3,null],[13,"RD_KAFKA_RESP_ERR__SSL","","",3,null],[13,"RD_KAFKA_RESP_ERR__WAIT_COORD","","",3,null],[13,"RD_KAFKA_RESP_ERR__UNKNOWN_GROUP","","",3,null],[13,"RD_KAFKA_RESP_ERR__IN_PROGRESS","","",3,null],[13,"RD_KAFKA_RESP_ERR__PREV_IN_PROGRESS","","",3,null],[13,"RD_KAFKA_RESP_ERR__EXISTING_SUBSCRIPTION","","",3,null],[13,"RD_KAFKA_RESP_ERR__ASSIGN_PARTITIONS","","",3,null],[13,"RD_KAFKA_RESP_ERR__REVOKE_PARTITIONS","","",3,null],[13,"RD_KAFKA_RESP_ERR__CONFLICT","","",3,null],[13,"RD_KAFKA_RESP_ERR__STATE","","",3,null],[13,"RD_KAFKA_RESP_ERR__UNKNOWN_PROTOCOL","","",3,null],[13,"RD_KAFKA_RESP_ERR__NOT_IMPLEMENTED","","",3,null],[13,"RD_KAFKA_RESP_ERR__AUTHENTICATION","","",3,null],[13,"RD_KAFKA_RESP_ERR__NO_OFFSET","","",3,null],[13,"RD_KAFKA_RESP_ERR__OUTDATED","","",3,null],[13,"RD_KAFKA_RESP_ERR__TIMED_OUT_QUEUE","","",3,null],[13,"RD_KAFKA_RESP_ERR__UNSUPPORTED_FEATURE","","",3,null],[13,"RD_KAFKA_RESP_ERR__WAIT_CACHE","","",3,null],[13,"RD_KAFKA_RESP_ERR__INTR","","",3,null],[13,"RD_KAFKA_RESP_ERR__KEY_SERIALIZATION","","",3,null],[13,"RD_KAFKA_RESP_ERR__VALUE_SERIALIZATION","","",3,null],[13,"RD_KAFKA_RESP_ERR__KEY_DESERIALIZATION","","",3,null],[13,"RD_KAFKA_RESP_ERR__VALUE_DESERIALIZATION","","",3,null],[13,"RD_KAFKA_RESP_ERR__END","","",3,null],[13,"RD_KAFKA_RESP_ERR_UNKNOWN","","",3,null],[13,"RD_KAFKA_RESP_ERR_NO_ERROR","","",3,null],[13,"RD_KAFKA_RESP_ERR_OFFSET_OUT_OF_RANGE","","",3,null],[13,"RD_KAFKA_RESP_ERR_INVALID_MSG","","",3,null],[13,"RD_KAFKA_RESP_ERR_UNKNOWN_TOPIC_OR_PART","","",3,null],[13,"RD_KAFKA_RESP_ERR_INVALID_MSG_SIZE","","",3,null],[13,"RD_KAFKA_RESP_ERR_LEADER_NOT_AVAILABLE","","",3,null],[13,"RD_KAFKA_RESP_ERR_NOT_LEADER_FOR_PARTITION","","",3,null],[13,"RD_KAFKA_RESP_ERR_REQUEST_TIMED_OUT","","",3,null],[13,"RD_KAFKA_RESP_ERR_BROKER_NOT_AVAILABLE","","",3,null],[13,"RD_KAFKA_RESP_ERR_REPLICA_NOT_AVAILABLE","","",3,null],[13,"RD_KAFKA_RESP_ERR_MSG_SIZE_TOO_LARGE","","",3,null],[13,"RD_KAFKA_RESP_ERR_STALE_CTRL_EPOCH","","",3,null],[13,"RD_KAFKA_RESP_ERR_OFFSET_METADATA_TOO_LARGE","","",3,null],[13,"RD_KAFKA_RESP_ERR_NETWORK_EXCEPTION","","",3,null],[13,"RD_KAFKA_RESP_ERR_GROUP_LOAD_IN_PROGRESS","","",3,null],[13,"RD_KAFKA_RESP_ERR_GROUP_COORDINATOR_NOT_AVAILABLE","","",3,null],[13,"RD_KAFKA_RESP_ERR_NOT_COORDINATOR_FOR_GROUP","","",3,null],[13,"RD_KAFKA_RESP_ERR_TOPIC_EXCEPTION","","",3,null],[13,"RD_KAFKA_RESP_ERR_RECORD_LIST_TOO_LARGE","","",3,null],[13,"RD_KAFKA_RESP_ERR_NOT_ENOUGH_REPLICAS","","",3,null],[13,"RD_KAFKA_RESP_ERR_NOT_ENOUGH_REPLICAS_AFTER_APPEND","","",3,null],[13,"RD_KAFKA_RESP_ERR_INVALID_REQUIRED_ACKS","","",3,null],[13,"RD_KAFKA_RESP_ERR_ILLEGAL_GENERATION","","",3,null],[13,"RD_KAFKA_RESP_ERR_INCONSISTENT_GROUP_PROTOCOL","","",3,null],[13,"RD_KAFKA_RESP_ERR_INVALID_GROUP_ID","","",3,null],[13,"RD_KAFKA_RESP_ERR_UNKNOWN_MEMBER_ID","","",3,null],[13,"RD_KAFKA_RESP_ERR_INVALID_SESSION_TIMEOUT","","",3,null],[13,"RD_KAFKA_RESP_ERR_REBALANCE_IN_PROGRESS","","",3,null],[13,"RD_KAFKA_RESP_ERR_INVALID_COMMIT_OFFSET_SIZE","","",3,null],[13,"RD_KAFKA_RESP_ERR_TOPIC_AUTHORIZATION_FAILED","","",3,null],[13,"RD_KAFKA_RESP_ERR_GROUP_AUTHORIZATION_FAILED","","",3,null],[13,"RD_KAFKA_RESP_ERR_CLUSTER_AUTHORIZATION_FAILED","","",3,null],[13,"RD_KAFKA_RESP_ERR_INVALID_TIMESTAMP","","",3,null],[13,"RD_KAFKA_RESP_ERR_UNSUPPORTED_SASL_MECHANISM","","",3,null],[13,"RD_KAFKA_RESP_ERR_ILLEGAL_SASL_STATE","","",3,null],[13,"RD_KAFKA_RESP_ERR_UNSUPPORTED_VERSION","","",3,null],[13,"RD_KAFKA_RESP_ERR_TOPIC_ALREADY_EXISTS","","",3,null],[13,"RD_KAFKA_RESP_ERR_INVALID_PARTITIONS","","",3,null],[13,"RD_KAFKA_RESP_ERR_INVALID_REPLICATION_FACTOR","","",3,null],[13,"RD_KAFKA_RESP_ERR_INVALID_REPLICA_ASSIGNMENT","","",3,null],[13,"RD_KAFKA_RESP_ERR_INVALID_CONFIG","","",3,null],[13,"RD_KAFKA_RESP_ERR_NOT_CONTROLLER","","",3,null],[13,"RD_KAFKA_RESP_ERR_INVALID_REQUEST","","",3,null],[13,"RD_KAFKA_RESP_ERR_UNSUPPORTED_FOR_MESSAGE_FORMAT","","",3,null],[13,"RD_KAFKA_RESP_ERR_POLICY_VIOLATION","","",3,null],[13,"RD_KAFKA_RESP_ERR_OUT_OF_ORDER_SEQUENCE_NUMBER","","",3,null],[13,"RD_KAFKA_RESP_ERR_DUPLICATE_SEQUENCE_NUMBER","","",3,null],[13,"RD_KAFKA_RESP_ERR_INVALID_PRODUCER_EPOCH","","",3,null],[13,"RD_KAFKA_RESP_ERR_INVALID_TXN_STATE","","",3,null],[13,"RD_KAFKA_RESP_ERR_INVALID_PRODUCER_ID_MAPPING","","",3,null],[13,"RD_KAFKA_RESP_ERR_INVALID_TRANSACTION_TIMEOUT","","",3,null],[13,"RD_KAFKA_RESP_ERR_CONCURRENT_TRANSACTIONS","","",3,null],[13,"RD_KAFKA_RESP_ERR_TRANSACTION_COORDINATOR_FENCED","","",3,null],[13,"RD_KAFKA_RESP_ERR_TRANSACTIONAL_ID_AUTHORIZATION_FAILED","","",3,null],[13,"RD_KAFKA_RESP_ERR_SECURITY_DISABLED","","",3,null],[13,"RD_KAFKA_RESP_ERR_OPERATION_NOT_ATTEMPTED","","",3,null],[13,"RD_KAFKA_RESP_ERR_END_ALL","","",3,null],[0,"client","rdkafka","Common client functionalities.",null,null],[3,"EmptyContext","rdkafka::client","An empty context that can be used when no context is needed.",null,null],[3,"NativeClient","","A native rdkafka-sys client. This struct shouldn't be used directly. Use higher level `Client` or producers and consumers.",null,null],[3,"Client","","A low level rdkafka client. This client shouldn't be used directly. The producer and consumer modules provide different producer and consumer implementations based on top of `Client` that can be used instead.",null,null],[5,"native_log_cb","","",null,null],[5,"native_stats_cb","","",null,null],[5,"native_error_cb","","",null,null],[8,"Context","","A Context is an object that can store user-defined data and on which callbacks can be defined. Refer to the list of methods to see which callbacks can currently be overridden. The context must be thread safe, and might be owned by multiple threads.",null,null],[11,"log","","Receives log lines from librdkafka.",4,{"inputs":[{"name":"self"},{"name":"rdkafkaloglevel"},{"name":"str"},{"name":"str"}],"output":null}],[11,"stats","","Receives the statistics of the librdkafka client. To enable, the \"statistics.interval.ms\" configuration parameter must be specified.",4,{"inputs":[{"name":"self"},{"name":"statistics"}],"output":null}],[11,"error","","Receives global errors from the librdkafka client.",4,{"inputs":[{"name":"self"},{"name":"kafkaerror"},{"name":"str"}],"output":null}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"emptycontext"}}],[11,"default","","",5,{"inputs":[],"output":{"name":"emptycontext"}}],[11,"new","","",5,{"inputs":[],"output":{"name":"emptycontext"}}],[11,"from_ptr","","Wraps a pointer to an RDKafka object and returns a new NativeClient.",6,null],[11,"ptr","","Returns the wrapped pointer to RDKafka.",6,null],[11,"drop","","",6,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Creates a new `Client` given a configuration, a client type and a context.",7,{"inputs":[{"name":"clientconfig"},{"name":"nativeclientconfig"},{"name":"rdkafkatype"},{"name":"c"}],"output":{"name":"kafkaresult"}}],[11,"native_client","","Returns a reference to the native rdkafka-sys client.",7,{"inputs":[{"name":"self"}],"output":{"name":"nativeclient"}}],[11,"native_ptr","","Returns a pointer to the native rdkafka-sys client.",7,null],[11,"context","","Returns a reference to the context.",7,{"inputs":[{"name":"self"}],"output":{"name":"c"}}],[11,"fetch_metadata","","Returns the metadata information for the specified topic, or for all topics in the cluster if no topic is specified.",7,{"inputs":[{"name":"self"},{"name":"option"},{"name":"i32"}],"output":{"name":"kafkaresult"}}],[11,"fetch_watermarks","","Returns high and low watermark for the specified topic and partition.",7,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"},{"name":"i32"}],"output":{"name":"kafkaresult"}}],[11,"fetch_group_list","","Returns the group membership information for the given group. If no group is specified, all groups will be returned.",7,{"inputs":[{"name":"self"},{"name":"option"},{"name":"i32"}],"output":{"name":"kafkaresult"}}],[0,"config","rdkafka","Configuration to create a Consumer or Producer.",null,null],[3,"NativeClientConfig","rdkafka::config","A native rdkafka-sys client config.",null,null],[3,"ClientConfig","","Client configuration.",null,null],[12,"log_level","","",8,null],[3,"NativeTopicConfig","","A native rdkafka-sys client config.",null,null],[3,"TopicConfig","","Topic configuration.",null,null],[4,"RDKafkaLogLevel","","The log levels supported by librdkafka.",null,null],[13,"Emerg","","Higher priority then LogLevel::Error from the log crate.",9,null],[13,"Alert","","Higher priority then LogLevel::Error from the log crate.",9,null],[13,"Critical","","Higher priority then LogLevel::Error from the log crate.",9,null],[13,"Error","","Equivalent to LogLevel::Error from the log crate.",9,null],[13,"Warning","","Equivalent to LogLevel::Warning from the log crate.",9,null],[13,"Notice","","Higher priority then LogLevel::Info from the log crate.",9,null],[13,"Info","","Equivalent to LogLevel::Info from the log crate.",9,null],[13,"Debug","","Equivalent to LogLevel::Debug from the log crate.",9,null],[8,"FromClientConfig","","Create a new client based on the provided configuration.",null,null],[10,"from_config","","",10,{"inputs":[{"name":"clientconfig"}],"output":{"name":"kafkaresult"}}],[8,"FromClientConfigAndContext","","Create a new client based on the provided configuration and context.",null,null],[10,"from_config_and_context","","",11,{"inputs":[{"name":"clientconfig"},{"name":"c"}],"output":{"name":"kafkaresult"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"rdkafkaloglevel"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_int","","",9,{"inputs":[{"name":"i32"}],"output":{"name":"rdkafkaloglevel"}}],[11,"from_ptr","","Wraps a pointer to an `RDKafkaConfig` object and returns a new `NativeClientConfig`.",12,null],[11,"ptr","","Returns the pointer to the librdkafka RDKafkaConf structure.",12,null],[11,"ptr_move","","Returns the pointer to the librdkafka RDKafkaConf structure. This method should be used when the native pointer is intended to be moved. The destructor won't be executed automatically; the caller should take care of deallocating the resource when no longer needed.",12,null],[11,"drop","","",12,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"clientconfig"}}],[11,"default","","",8,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Creates a new empty configuration.",8,{"inputs":[],"output":{"name":"clientconfig"}}],[11,"set","","Sets a new parameter in the configuration.",8,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":{"name":"clientconfig"}}],[11,"set_default_topic_config","","Sets the default topic configuration to use for automatically subscribed topics (e.g., through pattern-matched topics).",8,{"inputs":[{"name":"self"},{"name":"topicconfig"}],"output":{"name":"clientconfig"}}],[11,"set_log_level","","Sets the log level of the client. If not specified, the log level will be calculated based on the global log level of the log crate.",8,{"inputs":[{"name":"self"},{"name":"rdkafkaloglevel"}],"output":{"name":"clientconfig"}}],[11,"create_native_config","","Returns the native rdkafka-sys configuration.",8,{"inputs":[{"name":"self"}],"output":{"name":"kafkaresult"}}],[11,"create","","Uses the current configuration to create a new Consumer or Producer.",8,{"inputs":[{"name":"self"}],"output":{"name":"kafkaresult"}}],[11,"create_with_context","","Uses the current configuration and the provided context to create a new Consumer or Producer.",8,{"inputs":[{"name":"self"},{"name":"c"}],"output":{"name":"kafkaresult"}}],[11,"from_ptr","","Wraps a pointer to an `RDKafkaTopicConf` object and returns a new `NativeTopicConfig`.",13,null],[11,"ptr","","Returns the pointer to the librdkafka RDKafkaTopicConf structure.",13,null],[11,"ptr_move","","Returns the pointer to the librdkafka RDKafkaTopicConf structure. This method should be used when the native pointer is intended to be moved. The destructor won't be executed automatically; the caller should take care of deallocating the resource when no longer needed.",13,null],[11,"drop","","",13,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"topicconfig"}}],[11,"default","","",14,{"inputs":[],"output":{"name":"topicconfig"}}],[11,"new","","Returns a new TopicConfig.",14,{"inputs":[],"output":{"name":"topicconfig"}}],[11,"set","","Adds a new key-value pair in the topic configuration.",14,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":{"name":"topicconfig"}}],[11,"finalize","","Finalizes the creation of the topic configuration. Useful at the end of a chain of setters, if you need to store the resulting topic configuration before its use.",14,{"inputs":[{"name":"self"}],"output":{"name":"topicconfig"}}],[11,"create_native_config","","Creates a native rdkafka-sys topic configuration.",14,{"inputs":[{"name":"self"}],"output":{"name":"kafkaresult"}}],[0,"consumer","rdkafka","Base trait and common functionality for all consumers.",null,null],[3,"EmptyConsumerContext","rdkafka::consumer","An empty consumer context that can be user when no context is needed.",null,null],[4,"Rebalance","","Rebalance information.",null,null],[13,"Assign","","",15,null],[13,"Revoke","","",15,null],[13,"Error","","",15,null],[4,"CommitMode","","Specifies if the commit should be performed synchronously or asynchronously.",null,null],[13,"Sync","","Synchronous commit.",16,null],[13,"Async","","Asynchronous commit.",16,null],[0,"base_consumer","","Low level consumer wrapper.",null,null],[3,"BaseConsumer","rdkafka::consumer::base_consumer","Low level wrapper around the librdkafka consumer. This consumer requires to be periodically polled to make progress on rebalance, callbacks and to receive messages.",null,null],[5,"native_commit_cb","","",null,null],[11,"get_base_consumer","","",17,{"inputs":[{"name":"self"}],"output":{"name":"baseconsumer"}}],[11,"from_config","","",17,{"inputs":[{"name":"clientconfig"}],"output":{"name":"kafkaresult"}}],[11,"from_config_and_context","","",17,{"inputs":[{"name":"clientconfig"},{"name":"c"}],"output":{"name":"kafkaresult"}}],[11,"subscribe","","Subscribes the consumer to a list of topics and/or topic sets (using regex). Strings starting with `^` will be regex-matched to the full list of topics in the cluster and matching topics will be added to the subscription list.",17,null],[11,"unsubscribe","","Unsubscribe from previous subscription list.",17,{"inputs":[{"name":"self"}],"output":null}],[11,"assign","","Manually assign topics and partitions to consume.",17,{"inputs":[{"name":"self"},{"name":"topicpartitionlist"}],"output":{"name":"kafkaresult"}}],[11,"poll_raw","","Polls the consumer for messages and returns a pointer to the native rdkafka-sys struct.",17,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"kafkaresult"}}],[11,"poll","","Polls the consumer for events. It won't block more than the specified timeout.",17,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"kafkaresult"}}],[11,"commit","","Commits the provided list of partitions, or the underlying consumers state if `None`. The commit can be sync (blocking), or async.",17,{"inputs":[{"name":"self"},{"name":"option"},{"name":"commitmode"}],"output":{"name":"kafkaresult"}}],[11,"commit_message","","Commits the specified message. The commit can be sync (blocking), or async.",17,{"inputs":[{"name":"self"},{"name":"borrowedmessage"},{"name":"commitmode"}],"output":{"name":"kafkaresult"}}],[11,"store_offset","","Store offset for this message to be used on the next (auto)commit. When using this function, `enable.auto.offset.store` must be set to `false`.",17,{"inputs":[{"name":"self"},{"name":"borrowedmessage"}],"output":{"name":"kafkaresult"}}],[11,"subscription","","Returns the current topic subscription.",17,{"inputs":[{"name":"self"}],"output":{"name":"kafkaresult"}}],[11,"assignment","","Returns the current partition assignment.",17,{"inputs":[{"name":"self"}],"output":{"name":"kafkaresult"}}],[11,"committed","","Retrieve committed offsets for topics and partitions currently assigned to the consumer",17,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"kafkaresult"}}],[11,"offsets_for_timestamp","","Lookup the offsets for this consumer's partitions by timestamp.",17,{"inputs":[{"name":"self"},{"name":"i64"},{"name":"i32"}],"output":{"name":"kafkaresult"}}],[11,"position","","Retrieve current positions (offsets) for topics and partitions.",17,{"inputs":[{"name":"self"}],"output":{"name":"kafkaresult"}}],[11,"fetch_metadata","","Returns the metadata information for the specified topic, or for all topics in the cluster if no topic is specified.",17,{"inputs":[{"name":"self"},{"name":"option"},{"name":"i32"}],"output":{"name":"kafkaresult"}}],[11,"fetch_watermarks","","Returns high and low watermark for the specified topic and partition.",17,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"},{"name":"i32"}],"output":{"name":"kafkaresult"}}],[11,"fetch_group_list","","Returns the group membership information for the given group. If no group is specified, all groups will be returned.",17,{"inputs":[{"name":"self"},{"name":"option"},{"name":"i32"}],"output":{"name":"kafkaresult"}}],[11,"drop","","",17,{"inputs":[{"name":"self"}],"output":null}],[0,"stream_consumer","rdkafka::consumer","Stream-based consumer implementation.",null,null],[3,"MessageStream","rdkafka::consumer::stream_consumer","A Stream of Kafka messages. It can be used to receive messages as they are consumed from Kafka. Note: there might be buffering between the actual Kafka consumer and the receiving end of this stream, so it is not advised to use automatic commit, as some messages might have been consumed by the internal Kafka consumer but not processed.",null,null],[3,"StreamConsumer","","A Consumer with an associated polling thread. This consumer doesn't need to be polled and it will return all consumed messages as a `Stream`. Due to the asynchronous nature of the stream, some messages might be consumed by the consumer without being processed on the other end of the stream. If auto commit is used, it might cause message loss after consumer restart. Manual offset storing should be used, see the `store_offset` function on `Consumer`.",null,null],[11,"poll","","",18,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"get_base_consumer","","",19,{"inputs":[{"name":"self"}],"output":{"name":"baseconsumer"}}],[11,"from_config","","",19,{"inputs":[{"name":"clientconfig"}],"output":{"name":"kafkaresult"}}],[11,"from_config_and_context","","",19,{"inputs":[{"name":"clientconfig"},{"name":"c"}],"output":{"name":"kafkaresult"}}],[11,"start","","Starts the StreamConsumer with default configuration (100ms polling interval and no `NoMessageReceived` notifications).",19,{"inputs":[{"name":"self"}],"output":{"name":"messagestream"}}],[11,"start_with","","Starts the StreamConsumer with the specified poll interval. Additionally, if `no_message_error` is set to true, it will return an error of type `KafkaError::NoMessageReceived` every time the poll interval is reached and no message has been received.",19,{"inputs":[{"name":"self"},{"name":"duration"},{"name":"bool"}],"output":{"name":"messagestream"}}],[11,"stop","","Stops the StreamConsumer, blocking the caller until the internal consumer has been stopped.",19,{"inputs":[{"name":"self"}],"output":null}],[11,"drop","","",19,{"inputs":[{"name":"self"}],"output":null}],[8,"ConsumerContext","rdkafka::consumer","Consumer specific Context. This user-defined object can be used to provide custom callbacks to consumer events. Refer to the list of methods to check which callbacks can be specified.",null,null],[11,"rebalance","","Implements the default rebalancing strategy and calls the `pre_rebalance` and `post_rebalance` methods. If this method is overridden, it will be responsibility of the user to call them if needed.",20,{"inputs":[{"name":"self"},{"name":"nativeclient"},{"name":"rdkafkaresperr"},{"name":"topicpartitionlist"}],"output":null}],[11,"pre_rebalance","","Pre-rebalance callback. This method will run before the rebalance and should terminate its execution quickly.",20,{"inputs":[{"name":"self"},{"name":"rebalance"}],"output":null}],[11,"post_rebalance","","Post-rebalance callback. This method will run after the rebalance and should terminate its execution quickly.",20,{"inputs":[{"name":"self"},{"name":"rebalance"}],"output":null}],[11,"commit_callback","","Post commit callback. This method will run after a group of offsets was committed to the offset store.",20,null],[8,"Consumer","","Common trait for all consumers.",null,null],[10,"get_base_consumer","","Returns a reference to the BaseConsumer.",21,{"inputs":[{"name":"self"}],"output":{"name":"baseconsumer"}}],[11,"subscribe","","Subscribe the consumer to a list of topics.",21,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"kafkaresult"}}],[11,"assign","","Manually assign topics and partitions to the consumer.",21,{"inputs":[{"name":"self"},{"name":"topicpartitionlist"}],"output":{"name":"kafkaresult"}}],[11,"commit","","Commit offsets on broker for the provided list of partitions, or the underlying consumers state if `None`. If mode is set to CommitMode::Sync, the call will block until the message has been successfully committed.",21,{"inputs":[{"name":"self"},{"name":"option"},{"name":"commitmode"}],"output":{"name":"kafkaresult"}}],[11,"commit_message","","Commit a specific message. If mode is set to CommitMode::Sync, the call will block until the message has been successfully committed.",21,{"inputs":[{"name":"self"},{"name":"borrowedmessage"},{"name":"commitmode"}],"output":{"name":"kafkaresult"}}],[11,"store_offset","","Store offset for this message to be used on the next (auto)commit. When using this `enable.auto.offset.store` should be set to `false` in the config.",21,{"inputs":[{"name":"self"},{"name":"borrowedmessage"}],"output":{"name":"kafkaresult"}}],[11,"subscription","","Returns the current topic subscription.",21,{"inputs":[{"name":"self"}],"output":{"name":"kafkaresult"}}],[11,"assignment","","Returns the current partition assignment.",21,{"inputs":[{"name":"self"}],"output":{"name":"kafkaresult"}}],[11,"committed","","Retrieve committed offsets for topics and partitions.",21,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"kafkaresult"}}],[11,"offsets_for_timestamp","","Lookup the offsets for this consumer's partitions by timestamp.",21,{"inputs":[{"name":"self"},{"name":"i64"},{"name":"i32"}],"output":{"name":"kafkaresult"}}],[11,"position","","Retrieve current positions (offsets) for topics and partitions.",21,{"inputs":[{"name":"self"}],"output":{"name":"kafkaresult"}}],[11,"fetch_metadata","","Returns the metadata information for the specified topic, or for all topics in the cluster if no topic is specified.",21,{"inputs":[{"name":"self"},{"name":"option"},{"name":"i32"}],"output":{"name":"kafkaresult"}}],[11,"fetch_watermarks","","Returns the metadata information for all the topics in the cluster.",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"},{"name":"i32"}],"output":{"name":"kafkaresult"}}],[11,"fetch_group_list","","Returns the group membership information for the given group. If no group is specified, all groups will be returned.",21,{"inputs":[{"name":"self"},{"name":"option"},{"name":"i32"}],"output":{"name":"kafkaresult"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"rebalance"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"emptyconsumercontext"}}],[0,"error","rdkafka","Error manipulations.",null,null],[4,"RDKafkaError","rdkafka::error","Errors enum Error from the underlying rdkafka library.",null,null],[13,"BadMessage","","Received message is incorrect",0,null],[13,"BadCompression","","Bad/unknown compression",0,null],[13,"BrokerDestroy","","Broker is going away",0,null],[13,"Fail","","Generic failure",0,null],[13,"BrokerTransportFailure","","Broker transport failure",0,null],[13,"CriticalSystemResource","","Critical system resource",0,null],[13,"Resolve","","Failed to resolve broker",0,null],[13,"MessageTimedOut","","Produced message timed out",0,null],[13,"PartitionEOF","","Reached the end of the topic+partition queue on the broker. Not really an error.",0,null],[13,"UnknownPartition","","Permanent: Partition does not exist in cluster.",0,null],[13,"FileSystem","","File or filesystem error",0,null],[13,"UnknownTopic","","Permanent: Topic does not exist in cluster.",0,null],[13,"AllBrokersDown","","All broker connections are down.",0,null],[13,"InvalidArgument","","Invalid argument, or invalid configuration",0,null],[13,"OperationTimedOut","","Operation timed out",0,null],[13,"QueueFull","","Queue is full",0,null],[13,"ISRInsufficient","","ISR count < required.acks",0,null],[13,"NodeUpdate","","Broker node update",0,null],[13,"SSL","","SSL error",0,null],[13,"WaitingForCoordinator","","Waiting for coordinator to become available.",0,null],[13,"UnknownGroup","","Unknown client group",0,null],[13,"InProgress","","Operation in progress",0,null],[13,"PreviousInProgress","","Previous operation in progress, wait for it to finish.",0,null],[13,"ExistingSubscription","","This operation would interfere with an existing subscription",0,null],[13,"AssignPartitions","","Assigned partitions (rebalance_cb)",0,null],[13,"RevokePartitions","","Revoked partitions (rebalance_cb)",0,null],[13,"Conflict","","Conflicting use",0,null],[13,"State","","Wrong state",0,null],[13,"UnknownProtocol","","Unknown protocol",0,null],[13,"NotImplemented","","Not implemented",0,null],[13,"Authentication","","Authentication failure",0,null],[13,"NoOffset","","No stored offset",0,null],[13,"Outdated","","Outdated",0,null],[13,"TimedOutQueue","","Timed out in queue",0,null],[13,"UnsupportedFeature","","Feature not supported by broker",0,null],[13,"WaitCache","","Awaiting cache update",0,null],[13,"Interrupted","","Operation interrupted (e.g., due to yield))",0,null],[13,"KeySerialization","","Key serialization error",0,null],[13,"ValueSerialization","","Value serialization error",0,null],[13,"KeyDeserialization","","Key deserialization error",0,null],[13,"ValueDeserialization","","Value deserialization error",0,null],[13,"Unknown","","Unknown broker error",0,null],[13,"NoError","","Success",0,null],[13,"OffsetOutOfRange","","Offset out of range",0,null],[13,"InvalidMessage","","Invalid message",0,null],[13,"UnknownTopicOrPartition","","Unknown topic or partition",0,null],[13,"InvalidMessageSize","","Invalid message size",0,null],[13,"LeaderNotAvailable","","Leader not available",0,null],[13,"NotLeaderForPartition","","Not leader for partition",0,null],[13,"RequestTimedOut","","Request timed out",0,null],[13,"BrokerNotAvailable","","Broker not available",0,null],[13,"ReplicaNotAvailable","","Replica not available",0,null],[13,"MessageSizeTooLarge","","Message size too large",0,null],[13,"StaleControllerEpoch","","Stale controller epoch code",0,null],[13,"OffsetMetadataTooLarge","","Offset metadata string too large",0,null],[13,"NetworkException","","Broker disconnected before response received",0,null],[13,"GroupLoadInProgress","","Group coordinator load in progress",0,null],[13,"GroupCoordinatorNotAvailable","","Group coordinator not available",0,null],[13,"NotCoordinatorForGroup","","Not coordinator for group",0,null],[13,"InvalidTopic","","Invalid topic",0,null],[13,"MessageBatchTooLarge","","Message batch larger than configured server segment size",0,null],[13,"NotEnoughReplicas","","Not enough in-sync replicas",0,null],[13,"NotEnoughReplicasAfterAppend","","Message(s) written to insufficient number of in-sync replicas",0,null],[13,"InvalidRequiredAcks","","Invalid required acks value",0,null],[13,"IllegalGeneration","","Specified group generation id is not valid",0,null],[13,"InconsistentGroupProtocol","","Inconsistent group protocol",0,null],[13,"InvalidGroupId","","Invalid group.id",0,null],[13,"UnknownMemberId","","Unknown member",0,null],[13,"InvalidSessionTimeout","","Invalid session timeout",0,null],[13,"RebalanceInProgress","","Group rebalance in progress",0,null],[13,"InvalidCommitOffsetSize","","Commit offset data size is not valid",0,null],[13,"TopicAuthorizationFailed","","Topic authorization failed",0,null],[13,"GroupAuthorizationFailed","","Group authorization failed",0,null],[13,"ClusterAuthorizationFailed","","Cluster authorization failed",0,null],[13,"InvalidTimestamp","","Invalid timestamp",0,null],[13,"UnsupportedSASLMechanism","","Unsupported SASL mechanism",0,null],[13,"IllegalSASLState","","Illegal SASL state",0,null],[13,"UnsupportedVersion","","Unsupported version",0,null],[13,"TopicAlreadyExists","","Topic already exists",0,null],[13,"InvalidPartitions","","Invalid number of partitions",0,null],[13,"InvalidReplicationFactor","","Invalid replication factor",0,null],[13,"InvalidReplicaAssignment","","Invalid replica assignment",0,null],[13,"InvalidConfig","","Invalid config */",0,null],[13,"NotController","","Not controller for cluster",0,null],[13,"InvalidRequest","","Invalid request",0,null],[13,"UnsupportedForMessageFormat","","Message format on broker does not support request",0,null],[13,"PolicyViolation","","Policy violation",0,null],[13,"OutOfOrderSequenceNumber","","Broker received an out of order sequence number",0,null],[13,"DuplicateSequenceNumber","","Broker received a duplicate sequence number",0,null],[13,"InvalidProducerEpoch","","Producer attempted an operation with an old epoch",0,null],[13,"InvalidTransactionalState","","Producer attempted a transactional operation in an invalid state",0,null],[13,"InvalidProducerIdMapping","","Producer attempted to use a producer id which is currently assigned to its transactional id",0,null],[13,"InvalidTransactionTimeout","","Transaction timeout is larger than the maxi value allowed by the broker's max.transaction.timeout.ms",0,null],[13,"ConcurrentTransactions","","Producer attempted to update a transaction while another concurrent operation on the same transaction was ongoing",0,null],[13,"TransactionCoordinatorFenced","","Indicates that the transaction coordinator sending a WriteTxnMarker is no longer the current coordinator for a given producer",0,null],[13,"TransactionalIdAuthorizationFailed","","Transactional Id authorization failed",0,null],[13,"SecurityDisabled","","Security features are disabled",0,null],[13,"OperationNotAttempted","","Operation not attempted",0,null],[4,"KafkaError","","Represents all Kafka errors. Check the underlying `RDKafkaError` to get details.",null,null],[13,"ClientConfig","","",23,null],[13,"ClientCreation","","",23,null],[13,"ConsumerCommit","","",23,null],[13,"StoreOffset","","",23,null],[13,"ConsumerCreation","","",23,null],[13,"GroupListFetch","","",23,null],[13,"MessageConsumption","","",23,null],[13,"MessageProduction","","",23,null],[13,"MetadataFetch","","",23,null],[13,"NoMessageReceived","","",23,null],[13,"Nul","","",23,null],[13,"PartitionEOF","","",23,null],[13,"SetPartitionOffset","","",23,null],[13,"Subscription","","",23,null],[13,"TopicConfig","","",23,null],[13,"TopicCreation","","",23,null],[13,"Global","","",23,null],[13,"FutureCanceled","","",23,null],[6,"KafkaResult","","Kafka result.",null,null],[8,"IsError","","Verify if the value represents an error condition.",null,null],[10,"is_error","","Return true if the value represents an error.",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_error","rdkafka::types","",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_error","","",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","rdkafka::error","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",23,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",23,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"from","","",23,{"inputs":[{"name":"nulerror"}],"output":{"name":"kafkaerror"}}],[0,"groups","rdkafka","Group membership API.",null,null],[3,"GroupMemberInfo","rdkafka::groups","Group member information container.",null,null],[3,"GroupInfo","","Group information container.",null,null],[3,"GroupList","","List of groups. This structure wraps the  pointer returned by rdkafka-sys, and deallocates all the native resources when dropped.",null,null],[11,"id","","Return the id of the member.",25,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"client_id","","Return the client id of the member.",25,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"client_host","","Return the client host of the member.",25,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"name","","Return the name of the group.",26,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"members","","Returns the members of the group.",26,null],[11,"state","","Returns the state of the group.",26,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"protocol","","Returns the protocol of the group.",26,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"protocol_type","","Returns the protocol type of the group.",26,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_ptr","","Creates a new group list given a pointer to the native rdkafka-sys group list structure.",27,null],[11,"groups","","Returns all the groups in the list.",27,null],[11,"drop","","",27,{"inputs":[{"name":"self"}],"output":null}],[0,"message","rdkafka","Store and manipulate Kafka messages.",null,null],[3,"BorrowedMessage","rdkafka::message","A native librdkafka message. The content of the message is stored in the receiving buffer of the consumer, to avoid memory allocations. As such, `BorrowedMessage` cannot outlive the consumer it is received from. `BorrowedMessage`s are removed from the consumer buffer once they are dropped. Holding references to many messages might cause the memory of the consumer to fill up and stop. To transform a `BorrowedMessage` into a `OwnedMessage`, use the `detach` method.",null,null],[3,"OwnedMessage","","An `OwnedMessage` can be created from a `BorrowedMessage` using the `detach` method. `OwnedMessage`s don't hold any reference to the consumer, and don't use any memory inside the consumer buffer.",null,null],[4,"Timestamp","","Timestamp of a message",null,null],[13,"NotAvailable","","",28,null],[13,"CreateTime","","",28,null],[13,"LogAppendTime","","",28,null],[8,"Message","","The `Message` trait provides access to the fields of a generic Kafka message.",null,null],[10,"key","","Returns the key of the message, or None if there is no key.",29,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"payload","","Returns the payload of the message, or None if there is no payload.",29,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"topic","","Returns the source topic of the message.",29,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[10,"partition","","Returns the partition number where the message is stored.",29,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"offset","","Returns the offset of the message.",29,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[10,"timestamp","","Returns the message timestamp for a consumed message if available.",29,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"payload_view","","Converts the raw bytes of the payload to a reference of the specified type, that points to the same data inside the message and without performing any memory allocation",29,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"key_view","","Converts the raw bytes of the key to a reference of the specified type, that points to the same data inside the message and without performing any memory allocation",29,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"FromBytes","","Given a reference to a byte array, returns a different view of the same data. No copy of the data should be performed.",null,null],[16,"Error","","",30,null],[10,"from_bytes","","",30,null],[8,"ToBytes","","Given some data, returns the byte representation of that data. No copy of the data should be performed.",null,null],[10,"to_bytes","","",31,null],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"timestamp"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"self"},{"name":"timestamp"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"to_millis","","",28,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `BorrowedMessage` that wraps the native Kafka message pointer. The lifetime of the message will be bound to the lifetime of the consumer passed as parameter.",32,null],[11,"ptr","","Returns a pointer to the RDKafkaMessage.",32,null],[11,"topic_ptr","","Returns a pointer to the message's RDKafkaTopic",32,null],[11,"key_len","","Returns the length of the key field of the message.",32,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"payload_len","","Returns the length of the payload field of the message.",32,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"detach","","Clones the content of the `BorrowedMessage` and returns an `OwnedMessage`, that can outlive the consumer. This operation requires memory allocation and can be expensive.",32,{"inputs":[{"name":"self"}],"output":{"name":"ownedmessage"}}],[11,"key","","",32,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"payload","","",32,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"topic","","",32,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"partition","","",32,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"offset","","",32,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"timestamp","","",32,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"drop","","",32,{"inputs":[{"name":"self"}],"output":null}],[11,"key","","",33,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"payload","","",33,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"topic","","",33,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"partition","","",33,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"offset","","",33,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"timestamp","","",33,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[0,"metadata","rdkafka","Cluster metadata.",null,null],[3,"MetadataBroker","rdkafka::metadata","Broker metadata information.",null,null],[3,"MetadataPartition","","Partition metadata information.",null,null],[3,"MetadataTopic","","Topic metadata information.",null,null],[3,"Metadata","","Metadata container. This structure wraps the metadata pointer returned by rdkafka-sys, and deallocates all the native resources when dropped.",null,null],[11,"id","","Returns the id of the broker.",34,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"host","","Returns the host name of the broker.",34,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"port","","Returns the port of the broker.",34,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"id","","Returns the id of the partition.",35,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"leader","","Returns the broker id of the leader broker for the partition.",35,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"error","","Returns the metadata error for the partition, or None if there is no error.",35,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"replicas","","Returns the broker ids of the replicas.",35,null],[11,"isr","","Returns the broker ids of the in sync replicas.",35,null],[11,"name","","Returns the name of the topic.",36,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"partitions","","Returns the partition metadata information for all the partitions.",36,null],[11,"error","","Returns the metadata error, or None if there was no error.",36,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"from_ptr","","Creates a new Metadata container given a pointer to the native rdkafka-sys metadata.",37,null],[11,"orig_broker_id","","Returns the id of the broker originating this metadata.",37,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"orig_broker_name","","Returns the hostname of the broker originating this metadata.",37,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"brokers","","Returns the metadata information for all the brokers in the cluster.",37,null],[11,"topics","","Returns the metadata information for all the topics in the cluster.",37,null],[11,"drop","","",37,{"inputs":[{"name":"self"}],"output":null}],[0,"producer","rdkafka","Producer implementations.",null,null],[3,"EmptyProducerContext","rdkafka::producer","Simple empty producer context that can be use when the producer context is not required.",null,null],[3,"DeliveryReport","","Information returned by the producer after a message has been delivered or failed to be delivered.",null,null],[3,"BaseProducer","","Simple Kafka producer. This producer needs to be `poll`ed at regular intervals in order to serve queued delivery report callbacks. This producer can be cheaply cloned to create a new reference to the same underlying producer. Data production should be done using the `BaseProducerTopic`, that can be created from this producer.",null,null],[3,"FutureProducerContext","","The `ProducerContext` used by the `FutureProducer`. This context will use a Future as its `DeliveryContext` and will complete the future when the message is delivered (or failed to).",null,null],[3,"FutureProducer","","A producer with an internal running thread. This producer doesn't need to be polled. It can be cheaply cloned to get a reference to the same underlying producer. The internal thread can be terminated with the `stop` method or moving the `FutureProducer` out of scope.",null,null],[3,"DeliveryFuture","","A future that will receive a `DeliveryReport` containing information on the delivery status of the message.",null,null],[8,"ProducerContext","","A `ProducerContext` is a `Context` specific for producers. It can be used to store user-specified callbacks, such as `delivery`.",null,null],[16,"DeliveryContext","","A DeliveryContext is a user-defined structure that will be passed to the producer when producing a message, and returned to the `delivery` method once the message has been delivered, or failed to.",38,null],[10,"delivery","","This method will be called once the message has been delivered (or failed to). The `DeliveryContext` will be the one provided by the user when calling send.",38,null],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"emptyproducercontext"}}],[11,"delivery","","",39,null],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"result","","Returns the result of the production of the message.",40,{"inputs":[{"name":"self"}],"output":{"name":"kafkaresult"}}],[11,"partition","","Returns the partition of the message.",40,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"offset","","Returns the offset of the message.",40,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"poll","","Polls the producer. Regular calls to `poll` are required to process the evens and execute the message delivery callbacks.",41,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"i32"}}],[11,"send_copy","","Sends a copy of the payload and key provided to the specified topic. When no partition is specified the underlying Kafka library picks a partition based on the key. If no key is specified, a random partition will be used.",41,{"inputs":[{"name":"self"},{"name":"str"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"option"}],"output":{"name":"kafkaresult"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"baseproducer"}}],[11,"from_config","","Creates a new `BaseProducer` starting from a configuration.",41,{"inputs":[{"name":"clientconfig"}],"output":{"name":"kafkaresult"}}],[11,"from_config_and_context","","Creates a new `BaseProducer` starting from a configuration and a context.",41,{"inputs":[{"name":"clientconfig"},{"name":"c"}],"output":{"name":"kafkaresult"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"futureproducercontext"}}],[11,"log","","",42,{"inputs":[{"name":"self"},{"name":"rdkafkaloglevel"},{"name":"str"},{"name":"str"}],"output":null}],[11,"stats","","",42,{"inputs":[{"name":"self"},{"name":"statistics"}],"output":null}],[11,"error","","Receives global errors from the librdkafka client.",42,{"inputs":[{"name":"self"},{"name":"kafkaerror"},{"name":"str"}],"output":null}],[11,"delivery","","",42,{"inputs":[{"name":"self"},{"name":"deliveryreport"},{"name":"complete"}],"output":null}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"futureproducer"}}],[11,"from_config","","",43,{"inputs":[{"name":"clientconfig"}],"output":{"name":"kafkaresult"}}],[11,"from_config_and_context","","",43,{"inputs":[{"name":"clientconfig"},{"name":"c"}],"output":{"name":"kafkaresult"}}],[11,"close","","",44,{"inputs":[{"name":"self"}],"output":null}],[11,"poll","","",44,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"send_copy","","Sends a copy of the payload and key provided to the specified topic. When no partition is specified the underlying Kafka library picks a partition based on the key. Returns a `DeliveryFuture` or an error.",43,{"inputs":[{"name":"self"},{"name":"str"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"option"}],"output":{"name":"deliveryfuture"}}],[11,"stop","","Stops the internal polling thread. The thread can also be stopped by moving the `FutureProducer` out of scope.",43,{"inputs":[{"name":"self"}],"output":null}],[0,"statistics","rdkafka","",null,null],[3,"Statistics","rdkafka::statistics","",null,null],[12,"name","","",45,null],[12,"client_type","","",45,null],[12,"ts","","",45,null],[12,"time","","",45,null],[12,"replyq","","",45,null],[12,"msg_cnt","","",45,null],[12,"msg_size","","",45,null],[12,"msg_max","","",45,null],[12,"msg_size_max","","",45,null],[12,"simple_cnt","","",45,null],[12,"brokers","","",45,null],[12,"topics","","",45,null],[12,"cgrp","","",45,null],[3,"Broker","","",null,null],[12,"name","","",46,null],[12,"nodeid","","",46,null],[12,"state","","",46,null],[12,"stateage","","",46,null],[12,"outbuf_cnt","","",46,null],[12,"outbuf_msg_cnt","","",46,null],[12,"waitresp_cnt","","",46,null],[12,"waitresp_msg_cnt","","",46,null],[12,"tx","","",46,null],[12,"txbytes","","",46,null],[12,"txerrs","","",46,null],[12,"txretries","","",46,null],[12,"req_timeouts","","",46,null],[12,"rx","","",46,null],[12,"rxbytes","","",46,null],[12,"rxerrs","","",46,null],[12,"rxcorriderrs","","",46,null],[12,"rxpartial","","",46,null],[12,"zbuf_grow","","",46,null],[12,"buf_grow","","",46,null],[12,"wakeups","","",46,null],[12,"int_latency","","",46,null],[12,"rtt","","",46,null],[12,"throttle","","",46,null],[12,"toppars","","",46,null],[3,"Window","","",null,null],[12,"min","","",47,null],[12,"max","","",47,null],[12,"avg","","",47,null],[12,"sum","","",47,null],[12,"cnt","","",47,null],[3,"TopicPartition","","",null,null],[12,"topic","","",48,null],[12,"partition","","",48,null],[3,"Topic","","",null,null],[12,"topic","","",49,null],[12,"metadata_age","","",49,null],[12,"partitions","","",49,null],[3,"Partition","","",null,null],[12,"partition","","",50,null],[12,"leader","","",50,null],[12,"desired","","",50,null],[12,"unknown","","",50,null],[12,"msgq_cnt","","",50,null],[12,"msgq_bytes","","",50,null],[12,"xmit_msgq_cnt","","",50,null],[12,"xmit_msgq_bytes","","",50,null],[12,"fetchq_cnt","","",50,null],[12,"fetchq_size","","",50,null],[12,"fetch_state","","",50,null],[12,"query_offset","","",50,null],[12,"next_offset","","",50,null],[12,"app_offset","","",50,null],[12,"stored_offset","","",50,null],[12,"committed_offset","","",50,null],[12,"eof_offset","","",50,null],[12,"lo_offset","","",50,null],[12,"hi_offset","","",50,null],[12,"consumer_lag","","",50,null],[12,"txmsgs","","",50,null],[12,"txbytes","","",50,null],[12,"msgs","","",50,null],[12,"rx_ver_drops","","",50,null],[3,"ConsumerGroup","","",null,null],[12,"rebalance_age","","",51,null],[12,"rebalance_cnt","","",51,null],[12,"assignment_size","","",51,null],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"topic_partition_list","rdkafka","A data structure representing topic, partitions and offsets, compatible with the `RDKafkaTopicPartitionList` exported by `rdkafka-sys`.",null,null],[3,"TopicPartitionListElem","rdkafka::topic_partition_list","One element of the topic partition list.",null,null],[3,"TopicPartitionList","","A structure to store and manipulate a list of topics and partitions with optional offsets.",null,null],[4,"Offset","","A librdkafka offset.",null,null],[13,"Beginning","","Start consuming from the beginning of the partition.",52,null],[13,"End","","Start consuming from the end of the partition.",52,null],[13,"Stored","","Start consuming from the stored offset.",52,null],[13,"Invalid","","Offset not assigned or invalid.",52,null],[13,"Offset","","A specific offset to consume from.",52,null],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"offset"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",52,{"inputs":[{"name":"self"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"self"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"from_raw","","Converts the integer representation of an offset use by librdkafka to an `Offset`.",52,{"inputs":[{"name":"i64"}],"output":{"name":"offset"}}],[11,"to_raw","","Converts the `Offset` to the internal integer representation used by librdkafka.",52,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"topic","","Returns the topic name.",53,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"error","","",53,{"inputs":[{"name":"self"}],"output":{"name":"kafkaresult"}}],[11,"partition","","Returns the partition number.",53,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"offset","","Returns the offset.",53,{"inputs":[{"name":"self"}],"output":{"name":"offset"}}],[11,"set_offset","","Sets the offset.",53,{"inputs":[{"name":"self"},{"name":"offset"}],"output":null}],[11,"eq","","",53,{"inputs":[{"name":"self"},{"name":"topicpartitionlistelem"}],"output":{"name":"bool"}}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"new","","Creates a new empty list with default capacity.",54,{"inputs":[],"output":{"name":"topicpartitionlist"}}],[11,"with_capacity","","Creates a new empty list with the specified capacity.",54,{"inputs":[{"name":"usize"}],"output":{"name":"topicpartitionlist"}}],[11,"from_ptr","","Transforms a pointer to the native librdkafka RDTopicPartitionList into a managed `TopicPartitionList` instance.",54,null],[11,"from_topic_map","","Given a topic map, generates a new `TopicPartitionList`.",54,{"inputs":[{"name":"hashmap"}],"output":{"name":"topicpartitionlist"}}],[11,"ptr","","Returns the pointer to the internal librdkafka structure.",54,null],[11,"leak","","Capture the instance without calling the destructor on the internal librdkafka structure.",54,{"inputs":[{"name":"self"}],"output":null}],[11,"count","","Returns the number of elements in the list.",54,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"capacity","","Returns the capacity of the list.",54,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"add_topic_unassigned","","Adds a topic with unassigned partitions to the list.",54,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"topicpartitionlistelem"}}],[11,"add_partition","","Adds a topic and partition to the list.",54,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"}],"output":{"name":"topicpartitionlistelem"}}],[11,"add_partition_range","","Adds a topic and partition range to the list.",54,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"set_partition_offset","","Sets the offset for an already created topic partition. It will fail if the topic partition isn't in the list.",54,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"},{"name":"offset"}],"output":{"name":"kafkaresult"}}],[11,"add_partition_offset","","Adds a topic and partition to the list, with the specified offset.",54,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"},{"name":"offset"}],"output":null}],[11,"find_partition","","Given a topic name and a partition number, returns the corresponding list element.",54,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"}],"output":{"name":"option"}}],[11,"set_all_offsets","","Sets all partitions in the list to the specified offset.",54,{"inputs":[{"name":"self"},{"name":"offset"}],"output":null}],[11,"elements","","Returns all the elements of the list.",54,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"elements_for_topic","","Returns all the elements of the list that belong to the specified topic.",54,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"vec"}}],[11,"to_topic_map","","Returns a hashmap-based representation of the list.",54,{"inputs":[{"name":"self"}],"output":{"name":"hashmap"}}],[11,"drop","","",54,{"inputs":[{"name":"self"}],"output":null}],[11,"eq","","",54,{"inputs":[{"name":"self"},{"name":"topicpartitionlist"}],"output":{"name":"bool"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"util","rdkafka","",null,null],[5,"get_rdkafka_version","rdkafka::util","Return a tuple representing the version of `librdkafka` in hexadecimal and string format.",null,null],[5,"duration_to_millis","","Converts a Duration into milliseconds",null,{"inputs":[{"name":"duration"}],"output":{"name":"u64"}}],[5,"millis_to_epoch","","",null,{"inputs":[{"name":"systemtime"}],"output":{"name":"i64"}}],[5,"bytes_cstr_to_owned","","Converts a byte array representing a C string into a String.",null,null],[5,"cstr_to_owned","","Converts a C string into a String.",null,null],[11,"fmt","rdkafka::types","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","rdkafka::error","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from","","",0,{"inputs":[{"name":"rd_kafka_resp_err_t"}],"output":{"name":"rdkafkaerror"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","rdkafka::types","",1,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_type_t"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_resp_err_t"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_conf_res_t"}}],[11,"clone","rdkafka::error","",0,{"inputs":[{"name":"self"}],"output":{"name":"rdkafkaerror"}}]],"paths":[[4,"RDKafkaError"],[4,"rd_kafka_type_t"],[4,"rd_kafka_conf_res_t"],[4,"rd_kafka_resp_err_t"],[8,"Context"],[3,"EmptyContext"],[3,"NativeClient"],[3,"Client"],[3,"ClientConfig"],[4,"RDKafkaLogLevel"],[8,"FromClientConfig"],[8,"FromClientConfigAndContext"],[3,"NativeClientConfig"],[3,"NativeTopicConfig"],[3,"TopicConfig"],[4,"Rebalance"],[4,"CommitMode"],[3,"BaseConsumer"],[3,"MessageStream"],[3,"StreamConsumer"],[8,"ConsumerContext"],[8,"Consumer"],[3,"EmptyConsumerContext"],[4,"KafkaError"],[8,"IsError"],[3,"GroupMemberInfo"],[3,"GroupInfo"],[3,"GroupList"],[4,"Timestamp"],[8,"Message"],[8,"FromBytes"],[8,"ToBytes"],[3,"BorrowedMessage"],[3,"OwnedMessage"],[3,"MetadataBroker"],[3,"MetadataPartition"],[3,"MetadataTopic"],[3,"Metadata"],[8,"ProducerContext"],[3,"EmptyProducerContext"],[3,"DeliveryReport"],[3,"BaseProducer"],[3,"FutureProducerContext"],[3,"FutureProducer"],[3,"DeliveryFuture"],[3,"Statistics"],[3,"Broker"],[3,"Window"],[3,"TopicPartition"],[3,"Topic"],[3,"Partition"],[3,"ConsumerGroup"],[4,"Offset"],[3,"TopicPartitionListElem"],[3,"TopicPartitionList"]]};
searchIndex["rdkafka_sys"] = {"doc":"","items":[[0,"bindings","rdkafka_sys","",null,null],[3,"__fsid_t","rdkafka_sys::bindings","",null,null],[12,"__val","","",0,null],[3,"__mbstate_t","","",null,null],[12,"__count","","",1,null],[12,"__value","","",1,null],[3,"Union_Unnamed1","","",null,null],[12,"_bindgen_data_","","",2,null],[3,"_G_fpos_t","","",null,null],[12,"__pos","","",3,null],[12,"__state","","",3,null],[3,"_G_fpos64_t","","",null,null],[12,"__pos","","",4,null],[12,"__state","","",4,null],[3,"_IO_marker","","",null,null],[12,"_next","","",5,null],[12,"_sbuf","","",5,null],[12,"_pos","","",5,null],[3,"_IO_FILE","","",null,null],[12,"_flags","","",6,null],[12,"_IO_read_ptr","","",6,null],[12,"_IO_read_end","","",6,null],[12,"_IO_read_base","","",6,null],[12,"_IO_write_base","","",6,null],[12,"_IO_write_ptr","","",6,null],[12,"_IO_write_end","","",6,null],[12,"_IO_buf_base","","",6,null],[12,"_IO_buf_end","","",6,null],[12,"_IO_save_base","","",6,null],[12,"_IO_backup_base","","",6,null],[12,"_IO_save_end","","",6,null],[12,"_markers","","",6,null],[12,"_chain","","",6,null],[12,"_fileno","","",6,null],[12,"_flags2","","",6,null],[12,"_old_offset","","",6,null],[12,"_cur_column","","",6,null],[12,"_vtable_offset","","",6,null],[12,"_shortbuf","","",6,null],[12,"_lock","","",6,null],[12,"_offset","","",6,null],[12,"__pad1","","",6,null],[12,"__pad2","","",6,null],[12,"__pad3","","",6,null],[12,"__pad4","","",6,null],[12,"__pad5","","",6,null],[12,"_mode","","",6,null],[12,"_unused2","","",6,null],[3,"imaxdiv_t","","",null,null],[12,"quot","","",7,null],[12,"rem","","",7,null],[3,"__sigset_t","","",null,null],[12,"__val","","",8,null],[3,"timespec","","",null,null],[12,"tv_sec","","",9,null],[12,"tv_nsec","","",9,null],[3,"timeval","","",null,null],[12,"tv_sec","","",10,null],[12,"tv_usec","","",10,null],[3,"fd_set","","",null,null],[12,"__fds_bits","","",11,null],[3,"pthread_attr_t","","",null,null],[12,"_bindgen_data_","","",12,null],[3,"__pthread_internal_list","","",null,null],[12,"__prev","","",13,null],[12,"__next","","",13,null],[3,"pthread_mutex_t","","",null,null],[12,"_bindgen_data_","","",14,null],[3,"__pthread_mutex_s","","",null,null],[12,"__lock","","",15,null],[12,"__count","","",15,null],[12,"__owner","","",15,null],[12,"__nusers","","",15,null],[12,"__kind","","",15,null],[12,"__spins","","",15,null],[12,"__elision","","",15,null],[12,"__list","","",15,null],[3,"pthread_mutexattr_t","","",null,null],[12,"_bindgen_data_","","",16,null],[3,"pthread_cond_t","","",null,null],[12,"_bindgen_data_","","",17,null],[3,"Struct_Unnamed2","","",null,null],[12,"__lock","","",18,null],[12,"__futex","","",18,null],[12,"__total_seq","","",18,null],[12,"__wakeup_seq","","",18,null],[12,"__woken_seq","","",18,null],[12,"__mutex","","",18,null],[12,"__nwaiters","","",18,null],[12,"__broadcast_seq","","",18,null],[3,"pthread_condattr_t","","",null,null],[12,"_bindgen_data_","","",19,null],[3,"pthread_rwlock_t","","",null,null],[12,"_bindgen_data_","","",20,null],[3,"Struct_Unnamed3","","",null,null],[12,"__lock","","",21,null],[12,"__nr_readers","","",21,null],[12,"__readers_wakeup","","",21,null],[12,"__writer_wakeup","","",21,null],[12,"__nr_readers_queued","","",21,null],[12,"__nr_writers_queued","","",21,null],[12,"__writer","","",21,null],[12,"__shared","","",21,null],[12,"__rwelision","","",21,null],[12,"__pad1","","",21,null],[12,"__pad2","","",21,null],[12,"__flags","","",21,null],[3,"pthread_rwlockattr_t","","",null,null],[12,"_bindgen_data_","","",22,null],[3,"pthread_barrier_t","","",null,null],[12,"_bindgen_data_","","",23,null],[3,"pthread_barrierattr_t","","",null,null],[12,"_bindgen_data_","","",24,null],[3,"iovec","","",null,null],[12,"iov_base","","",25,null],[12,"iov_len","","",25,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",26,null],[12,"sa_data","","",26,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",27,null],[12,"__ss_align","","",27,null],[12,"__ss_padding","","",27,null],[3,"msghdr","","",null,null],[12,"msg_name","","",28,null],[12,"msg_namelen","","",28,null],[12,"msg_iov","","",28,null],[12,"msg_iovlen","","",28,null],[12,"msg_control","","",28,null],[12,"msg_controllen","","",28,null],[12,"msg_flags","","",28,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",29,null],[12,"cmsg_level","","",29,null],[12,"cmsg_type","","",29,null],[12,"__cmsg_data","","",29,null],[3,"linger","","",null,null],[12,"l_onoff","","",30,null],[12,"l_linger","","",30,null],[3,"osockaddr","","",null,null],[12,"sa_family","","",31,null],[12,"sa_data","","",31,null],[3,"rd_kafka_err_desc","","",null,null],[12,"code","","",32,null],[12,"name","","",32,null],[12,"desc","","",32,null],[3,"rd_kafka_topic_partition_s","","",null,null],[12,"topic","","",33,null],[12,"partition","","",33,null],[12,"offset","","",33,null],[12,"metadata","","",33,null],[12,"metadata_size","","",33,null],[12,"opaque","","",33,null],[12,"err","","",33,null],[12,"_private","","",33,null],[3,"rd_kafka_topic_partition_list_s","","",null,null],[12,"cnt","","",34,null],[12,"size","","",34,null],[12,"elems","","",34,null],[3,"rd_kafka_message_s","","",null,null],[12,"err","","",35,null],[12,"rkt","","",35,null],[12,"partition","","",35,null],[12,"payload","","",35,null],[12,"len","","",35,null],[12,"key","","",35,null],[12,"key_len","","",35,null],[12,"offset","","",35,null],[12,"_private","","",35,null],[3,"rd_kafka_metadata_broker","","",null,null],[12,"id","","",36,null],[12,"host","","",36,null],[12,"port","","",36,null],[3,"rd_kafka_metadata_partition","","",null,null],[12,"id","","",37,null],[12,"err","","",37,null],[12,"leader","","",37,null],[12,"replica_cnt","","",37,null],[12,"replicas","","",37,null],[12,"isr_cnt","","",37,null],[12,"isrs","","",37,null],[3,"rd_kafka_metadata_topic","","",null,null],[12,"topic","","",38,null],[12,"partition_cnt","","",38,null],[12,"partitions","","",38,null],[12,"err","","",38,null],[3,"rd_kafka_metadata","","",null,null],[12,"broker_cnt","","",39,null],[12,"brokers","","",39,null],[12,"topic_cnt","","",39,null],[12,"topics","","",39,null],[12,"orig_broker_id","","",39,null],[12,"orig_broker_name","","",39,null],[3,"rd_kafka_group_member_info","","",null,null],[12,"member_id","","",40,null],[12,"client_id","","",40,null],[12,"client_host","","",40,null],[12,"member_metadata","","",40,null],[12,"member_metadata_size","","",40,null],[12,"member_assignment","","",40,null],[12,"member_assignment_size","","",40,null],[3,"rd_kafka_group_info","","",null,null],[12,"broker","","",41,null],[12,"group","","",41,null],[12,"err","","",41,null],[12,"state","","",41,null],[12,"protocol_type","","",41,null],[12,"protocol","","",41,null],[12,"members","","",41,null],[12,"member_cnt","","",41,null],[3,"rd_kafka_group_list","","",null,null],[12,"groups","","",42,null],[12,"group_cnt","","",42,null],[3,"__va_list_tag","","",null,null],[12,"gp_offset","","",43,null],[12,"fp_offset","","",43,null],[12,"overflow_arg_area","","",43,null],[12,"reg_save_area","","",43,null],[4,"_IO_jump_t","","",null,null],[4,"__codecvt_result","","",null,null],[13,"__codecvt_ok","","",44,null],[13,"__codecvt_partial","","",44,null],[13,"__codecvt_error","","",44,null],[13,"__codecvt_noconv","","",44,null],[4,"_IO_FILE_plus","","",null,null],[4,"__socket_type","","",null,null],[13,"SOCK_STREAM","","",45,null],[13,"SOCK_DGRAM","","",45,null],[13,"SOCK_RAW","","",45,null],[13,"SOCK_RDM","","",45,null],[13,"SOCK_SEQPACKET","","",45,null],[13,"SOCK_DCCP","","",45,null],[13,"SOCK_PACKET","","",45,null],[13,"SOCK_CLOEXEC","","",45,null],[13,"SOCK_NONBLOCK","","",45,null],[4,"Enum_Unnamed4","","",null,null],[13,"MSG_OOB","","",46,null],[13,"MSG_PEEK","","",46,null],[13,"MSG_DONTROUTE","","",46,null],[13,"MSG_CTRUNC","","",46,null],[13,"MSG_PROXY","","",46,null],[13,"MSG_TRUNC","","",46,null],[13,"MSG_DONTWAIT","","",46,null],[13,"MSG_EOR","","",46,null],[13,"MSG_WAITALL","","",46,null],[13,"MSG_FIN","","",46,null],[13,"MSG_SYN","","",46,null],[13,"MSG_CONFIRM","","",46,null],[13,"MSG_RST","","",46,null],[13,"MSG_ERRQUEUE","","",46,null],[13,"MSG_NOSIGNAL","","",46,null],[13,"MSG_MORE","","",46,null],[13,"MSG_WAITFORONE","","",46,null],[13,"MSG_FASTOPEN","","",46,null],[13,"MSG_CMSG_CLOEXEC","","",46,null],[4,"Enum_Unnamed5","","",null,null],[13,"SCM_RIGHTS","","",47,null],[4,"Enum_Unnamed6","","",null,null],[13,"SHUT_RD","","",48,null],[13,"SHUT_WR","","",48,null],[13,"SHUT_RDWR","","",48,null],[4,"rd_kafka_type_t","","",null,null],[13,"RD_KAFKA_PRODUCER","","",49,null],[13,"RD_KAFKA_CONSUMER","","",49,null],[4,"rd_kafka_timestamp_type_t","","",null,null],[13,"RD_KAFKA_TIMESTAMP_NOT_AVAILABLE","","",50,null],[13,"RD_KAFKA_TIMESTAMP_CREATE_TIME","","",50,null],[13,"RD_KAFKA_TIMESTAMP_LOG_APPEND_TIME","","",50,null],[4,"rd_kafka_s","","",null,null],[4,"rd_kafka_topic_s","","",null,null],[4,"rd_kafka_conf_s","","",null,null],[4,"rd_kafka_topic_conf_s","","",null,null],[4,"rd_kafka_queue_s","","",null,null],[4,"rd_kafka_resp_err_t","","",null,null],[13,"RD_KAFKA_RESP_ERR__BEGIN","","",51,null],[13,"RD_KAFKA_RESP_ERR__BAD_MSG","","",51,null],[13,"RD_KAFKA_RESP_ERR__BAD_COMPRESSION","","",51,null],[13,"RD_KAFKA_RESP_ERR__DESTROY","","",51,null],[13,"RD_KAFKA_RESP_ERR__FAIL","","",51,null],[13,"RD_KAFKA_RESP_ERR__TRANSPORT","","",51,null],[13,"RD_KAFKA_RESP_ERR__CRIT_SYS_RESOURCE","","",51,null],[13,"RD_KAFKA_RESP_ERR__RESOLVE","","",51,null],[13,"RD_KAFKA_RESP_ERR__MSG_TIMED_OUT","","",51,null],[13,"RD_KAFKA_RESP_ERR__PARTITION_EOF","","",51,null],[13,"RD_KAFKA_RESP_ERR__UNKNOWN_PARTITION","","",51,null],[13,"RD_KAFKA_RESP_ERR__FS","","",51,null],[13,"RD_KAFKA_RESP_ERR__UNKNOWN_TOPIC","","",51,null],[13,"RD_KAFKA_RESP_ERR__ALL_BROKERS_DOWN","","",51,null],[13,"RD_KAFKA_RESP_ERR__INVALID_ARG","","",51,null],[13,"RD_KAFKA_RESP_ERR__TIMED_OUT","","",51,null],[13,"RD_KAFKA_RESP_ERR__QUEUE_FULL","","",51,null],[13,"RD_KAFKA_RESP_ERR__ISR_INSUFF","","",51,null],[13,"RD_KAFKA_RESP_ERR__NODE_UPDATE","","",51,null],[13,"RD_KAFKA_RESP_ERR__SSL","","",51,null],[13,"RD_KAFKA_RESP_ERR__WAIT_COORD","","",51,null],[13,"RD_KAFKA_RESP_ERR__UNKNOWN_GROUP","","",51,null],[13,"RD_KAFKA_RESP_ERR__IN_PROGRESS","","",51,null],[13,"RD_KAFKA_RESP_ERR__PREV_IN_PROGRESS","","",51,null],[13,"RD_KAFKA_RESP_ERR__EXISTING_SUBSCRIPTION","","",51,null],[13,"RD_KAFKA_RESP_ERR__ASSIGN_PARTITIONS","","",51,null],[13,"RD_KAFKA_RESP_ERR__REVOKE_PARTITIONS","","",51,null],[13,"RD_KAFKA_RESP_ERR__CONFLICT","","",51,null],[13,"RD_KAFKA_RESP_ERR__STATE","","",51,null],[13,"RD_KAFKA_RESP_ERR__UNKNOWN_PROTOCOL","","",51,null],[13,"RD_KAFKA_RESP_ERR__NOT_IMPLEMENTED","","",51,null],[13,"RD_KAFKA_RESP_ERR__AUTHENTICATION","","",51,null],[13,"RD_KAFKA_RESP_ERR__NO_OFFSET","","",51,null],[13,"RD_KAFKA_RESP_ERR__OUTDATED","","",51,null],[13,"RD_KAFKA_RESP_ERR__TIMED_OUT_QUEUE","","",51,null],[13,"RD_KAFKA_RESP_ERR__UNSUPPORTED_FEATURE","","",51,null],[13,"RD_KAFKA_RESP_ERR__WAIT_CACHE","","",51,null],[13,"RD_KAFKA_RESP_ERR__INTR","","",51,null],[13,"RD_KAFKA_RESP_ERR__KEY_SERIALIZATION","","",51,null],[13,"RD_KAFKA_RESP_ERR__VALUE_SERIALIZATION","","",51,null],[13,"RD_KAFKA_RESP_ERR__KEY_DESERIALIZATION","","",51,null],[13,"RD_KAFKA_RESP_ERR__VALUE_DESERIALIZATION","","",51,null],[13,"RD_KAFKA_RESP_ERR__END","","",51,null],[13,"RD_KAFKA_RESP_ERR_UNKNOWN","","",51,null],[13,"RD_KAFKA_RESP_ERR_NO_ERROR","","",51,null],[13,"RD_KAFKA_RESP_ERR_OFFSET_OUT_OF_RANGE","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_MSG","","",51,null],[13,"RD_KAFKA_RESP_ERR_UNKNOWN_TOPIC_OR_PART","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_MSG_SIZE","","",51,null],[13,"RD_KAFKA_RESP_ERR_LEADER_NOT_AVAILABLE","","",51,null],[13,"RD_KAFKA_RESP_ERR_NOT_LEADER_FOR_PARTITION","","",51,null],[13,"RD_KAFKA_RESP_ERR_REQUEST_TIMED_OUT","","",51,null],[13,"RD_KAFKA_RESP_ERR_BROKER_NOT_AVAILABLE","","",51,null],[13,"RD_KAFKA_RESP_ERR_REPLICA_NOT_AVAILABLE","","",51,null],[13,"RD_KAFKA_RESP_ERR_MSG_SIZE_TOO_LARGE","","",51,null],[13,"RD_KAFKA_RESP_ERR_STALE_CTRL_EPOCH","","",51,null],[13,"RD_KAFKA_RESP_ERR_OFFSET_METADATA_TOO_LARGE","","",51,null],[13,"RD_KAFKA_RESP_ERR_NETWORK_EXCEPTION","","",51,null],[13,"RD_KAFKA_RESP_ERR_GROUP_LOAD_IN_PROGRESS","","",51,null],[13,"RD_KAFKA_RESP_ERR_GROUP_COORDINATOR_NOT_AVAILABLE","","",51,null],[13,"RD_KAFKA_RESP_ERR_NOT_COORDINATOR_FOR_GROUP","","",51,null],[13,"RD_KAFKA_RESP_ERR_TOPIC_EXCEPTION","","",51,null],[13,"RD_KAFKA_RESP_ERR_RECORD_LIST_TOO_LARGE","","",51,null],[13,"RD_KAFKA_RESP_ERR_NOT_ENOUGH_REPLICAS","","",51,null],[13,"RD_KAFKA_RESP_ERR_NOT_ENOUGH_REPLICAS_AFTER_APPEND","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_REQUIRED_ACKS","","",51,null],[13,"RD_KAFKA_RESP_ERR_ILLEGAL_GENERATION","","",51,null],[13,"RD_KAFKA_RESP_ERR_INCONSISTENT_GROUP_PROTOCOL","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_GROUP_ID","","",51,null],[13,"RD_KAFKA_RESP_ERR_UNKNOWN_MEMBER_ID","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_SESSION_TIMEOUT","","",51,null],[13,"RD_KAFKA_RESP_ERR_REBALANCE_IN_PROGRESS","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_COMMIT_OFFSET_SIZE","","",51,null],[13,"RD_KAFKA_RESP_ERR_TOPIC_AUTHORIZATION_FAILED","","",51,null],[13,"RD_KAFKA_RESP_ERR_GROUP_AUTHORIZATION_FAILED","","",51,null],[13,"RD_KAFKA_RESP_ERR_CLUSTER_AUTHORIZATION_FAILED","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_TIMESTAMP","","",51,null],[13,"RD_KAFKA_RESP_ERR_UNSUPPORTED_SASL_MECHANISM","","",51,null],[13,"RD_KAFKA_RESP_ERR_ILLEGAL_SASL_STATE","","",51,null],[13,"RD_KAFKA_RESP_ERR_UNSUPPORTED_VERSION","","",51,null],[13,"RD_KAFKA_RESP_ERR_TOPIC_ALREADY_EXISTS","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_PARTITIONS","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_REPLICATION_FACTOR","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_REPLICA_ASSIGNMENT","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_CONFIG","","",51,null],[13,"RD_KAFKA_RESP_ERR_NOT_CONTROLLER","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_REQUEST","","",51,null],[13,"RD_KAFKA_RESP_ERR_UNSUPPORTED_FOR_MESSAGE_FORMAT","","",51,null],[13,"RD_KAFKA_RESP_ERR_POLICY_VIOLATION","","",51,null],[13,"RD_KAFKA_RESP_ERR_OUT_OF_ORDER_SEQUENCE_NUMBER","","",51,null],[13,"RD_KAFKA_RESP_ERR_DUPLICATE_SEQUENCE_NUMBER","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_PRODUCER_EPOCH","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_TXN_STATE","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_PRODUCER_ID_MAPPING","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_TRANSACTION_TIMEOUT","","",51,null],[13,"RD_KAFKA_RESP_ERR_CONCURRENT_TRANSACTIONS","","",51,null],[13,"RD_KAFKA_RESP_ERR_TRANSACTION_COORDINATOR_FENCED","","",51,null],[13,"RD_KAFKA_RESP_ERR_TRANSACTIONAL_ID_AUTHORIZATION_FAILED","","",51,null],[13,"RD_KAFKA_RESP_ERR_SECURITY_DISABLED","","",51,null],[13,"RD_KAFKA_RESP_ERR_OPERATION_NOT_ATTEMPTED","","",51,null],[13,"RD_KAFKA_RESP_ERR_END_ALL","","",51,null],[4,"rd_kafka_vtype_t","","",null,null],[13,"RD_KAFKA_VTYPE_END","","",52,null],[13,"RD_KAFKA_VTYPE_TOPIC","","",52,null],[13,"RD_KAFKA_VTYPE_RKT","","",52,null],[13,"RD_KAFKA_VTYPE_PARTITION","","",52,null],[13,"RD_KAFKA_VTYPE_VALUE","","",52,null],[13,"RD_KAFKA_VTYPE_KEY","","",52,null],[13,"RD_KAFKA_VTYPE_OPAQUE","","",52,null],[13,"RD_KAFKA_VTYPE_MSGFLAGS","","",52,null],[13,"RD_KAFKA_VTYPE_TIMESTAMP","","",52,null],[4,"rd_kafka_conf_res_t","","",null,null],[13,"RD_KAFKA_CONF_UNKNOWN","","",53,null],[13,"RD_KAFKA_CONF_INVALID","","",53,null],[13,"RD_KAFKA_CONF_OK","","",53,null],[4,"rd_kafka_op_s","","",null,null],[7,"_IO_2_1_stdin_","","",null,null],[7,"_IO_2_1_stdout_","","",null,null],[7,"_IO_2_1_stderr_","","",null,null],[7,"stdin","","",null,null],[7,"stdout","","",null,null],[7,"stderr","","",null,null],[7,"sys_nerr","","",null,null],[7,"sys_errlist","","",null,null],[5,"__underflow","","",null,null],[5,"__uflow","","",null,null],[5,"__overflow","","",null,null],[5,"_IO_getc","","",null,null],[5,"_IO_putc","","",null,null],[5,"_IO_feof","","",null,null],[5,"_IO_ferror","","",null,null],[5,"_IO_peekc_locked","","",null,null],[5,"_IO_flockfile","","",null,null],[5,"_IO_funlockfile","","",null,null],[5,"_IO_ftrylockfile","","",null,null],[5,"_IO_vfscanf","","",null,null],[5,"_IO_vfprintf","","",null,null],[5,"_IO_padn","","",null,null],[5,"_IO_sgetn","","",null,null],[5,"_IO_seekoff","","",null,null],[5,"_IO_seekpos","","",null,null],[5,"_IO_free_backup_area","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"renameat","","",null,null],[5,"tmpfile","","",null,null],[5,"tmpnam","","",null,null],[5,"tmpnam_r","","",null,null],[5,"tempnam","","",null,null],[5,"fclose","","",null,null],[5,"fflush","","",null,null],[5,"fflush_unlocked","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fdopen","","",null,null],[5,"fmemopen","","",null,null],[5,"open_memstream","","",null,null],[5,"setbuf","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuffer","","",null,null],[5,"setlinebuf","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"sprintf","","",null,null],[5,"vfprintf","","",null,null],[5,"vprintf","","",null,null],[5,"vsprintf","","",null,null],[5,"snprintf","","",null,null],[5,"vsnprintf","","",null,null],[5,"vdprintf","","",null,null],[5,"dprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"vfscanf","","",null,null],[5,"vscanf","","",null,null],[5,"vsscanf","","",null,null],[5,"fgetc","","",null,null],[5,"getc","","",null,null],[5,"getchar","","",null,null],[5,"getc_unlocked","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"fgetc_unlocked","","",null,null],[5,"fputc","","",null,null],[5,"putc","","",null,null],[5,"putchar","","",null,null],[5,"fputc_unlocked","","",null,null],[5,"putc_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"getw","","",null,null],[5,"putw","","",null,null],[5,"fgets","","",null,null],[5,"__getdelim","","",null,null],[5,"getdelim","","",null,null],[5,"getline","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fread_unlocked","","",null,null],[5,"fwrite_unlocked","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"clearerr","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"clearerr_unlocked","","",null,null],[5,"feof_unlocked","","",null,null],[5,"ferror_unlocked","","",null,null],[5,"perror","","",null,null],[5,"fileno","","",null,null],[5,"fileno_unlocked","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"ctermid","","",null,null],[5,"flockfile","","",null,null],[5,"ftrylockfile","","",null,null],[5,"funlockfile","","",null,null],[5,"imaxabs","","",null,null],[5,"imaxdiv","","",null,null],[5,"strtoimax","","",null,null],[5,"strtoumax","","",null,null],[5,"wcstoimax","","",null,null],[5,"wcstoumax","","",null,null],[5,"select","","",null,null],[5,"pselect","","",null,null],[5,"gnu_dev_major","","",null,null],[5,"gnu_dev_minor","","",null,null],[5,"gnu_dev_makedev","","",null,null],[5,"readv","","",null,null],[5,"writev","","",null,null],[5,"preadv","","",null,null],[5,"pwritev","","",null,null],[5,"__cmsg_nxthdr","","",null,null],[5,"socket","","",null,null],[5,"socketpair","","",null,null],[5,"bind","","",null,null],[5,"getsockname","","",null,null],[5,"connect","","",null,null],[5,"getpeername","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"sendto","","",null,null],[5,"recvfrom","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"getsockopt","","",null,null],[5,"setsockopt","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"shutdown","","",null,null],[5,"sockatmark","","",null,null],[5,"isfdtype","","",null,null],[5,"rd_kafka_version","","",null,null],[5,"rd_kafka_version_str","","",null,null],[5,"rd_kafka_get_debug_contexts","","",null,null],[5,"rd_kafka_get_err_descs","","",null,null],[5,"rd_kafka_err2str","","",null,null],[5,"rd_kafka_err2name","","",null,null],[5,"rd_kafka_last_error","","",null,null],[5,"rd_kafka_errno2err","","",null,null],[5,"rd_kafka_errno","","",null,null],[5,"rd_kafka_topic_partition_destroy","","",null,null],[5,"rd_kafka_topic_partition_list_new","","",null,null],[5,"rd_kafka_topic_partition_list_destroy","","",null,null],[5,"rd_kafka_topic_partition_list_add","","",null,null],[5,"rd_kafka_topic_partition_list_add_range","","",null,null],[5,"rd_kafka_topic_partition_list_del","","",null,null],[5,"rd_kafka_topic_partition_list_del_by_idx","","",null,null],[5,"rd_kafka_topic_partition_list_copy","","",null,null],[5,"rd_kafka_topic_partition_list_set_offset","","",null,null],[5,"rd_kafka_topic_partition_list_find","","",null,null],[5,"rd_kafka_topic_partition_list_sort","","",null,null],[5,"rd_kafka_message_destroy","","",null,null],[5,"rd_kafka_message_timestamp","","",null,null],[5,"rd_kafka_message_latency","","",null,null],[5,"rd_kafka_conf_new","","",null,null],[5,"rd_kafka_conf_destroy","","",null,null],[5,"rd_kafka_conf_dup","","",null,null],[5,"rd_kafka_conf_set","","",null,null],[5,"rd_kafka_conf_set_events","","",null,null],[5,"rd_kafka_conf_set_dr_cb","","",null,null],[5,"rd_kafka_conf_set_dr_msg_cb","","",null,null],[5,"rd_kafka_conf_set_consume_cb","","",null,null],[5,"rd_kafka_conf_set_rebalance_cb","","",null,null],[5,"rd_kafka_conf_set_offset_commit_cb","","",null,null],[5,"rd_kafka_conf_set_error_cb","","",null,null],[5,"rd_kafka_conf_set_throttle_cb","","",null,null],[5,"rd_kafka_conf_set_log_cb","","",null,null],[5,"rd_kafka_conf_set_stats_cb","","",null,null],[5,"rd_kafka_conf_set_socket_cb","","",null,null],[5,"rd_kafka_conf_set_connect_cb","","",null,null],[5,"rd_kafka_conf_set_closesocket_cb","","",null,null],[5,"rd_kafka_conf_set_open_cb","","",null,null],[5,"rd_kafka_conf_set_opaque","","",null,null],[5,"rd_kafka_opaque","","",null,null],[5,"rd_kafka_conf_set_default_topic_conf","","",null,null],[5,"rd_kafka_conf_get","","",null,null],[5,"rd_kafka_topic_conf_get","","",null,null],[5,"rd_kafka_conf_dump","","",null,null],[5,"rd_kafka_topic_conf_dump","","",null,null],[5,"rd_kafka_conf_dump_free","","",null,null],[5,"rd_kafka_conf_properties_show","","",null,null],[5,"rd_kafka_topic_conf_new","","",null,null],[5,"rd_kafka_topic_conf_dup","","",null,null],[5,"rd_kafka_topic_conf_destroy","","",null,null],[5,"rd_kafka_topic_conf_set","","",null,null],[5,"rd_kafka_topic_conf_set_opaque","","",null,null],[5,"rd_kafka_topic_conf_set_partitioner_cb","","",null,null],[5,"rd_kafka_topic_partition_available","","",null,null],[5,"rd_kafka_msg_partitioner_random","","",null,null],[5,"rd_kafka_msg_partitioner_consistent","","",null,null],[5,"rd_kafka_msg_partitioner_consistent_random","","",null,null],[5,"rd_kafka_new","","",null,null],[5,"rd_kafka_destroy","","",null,null],[5,"rd_kafka_name","","",null,null],[5,"rd_kafka_type","","",null,null],[5,"rd_kafka_memberid","","",null,null],[5,"rd_kafka_clusterid","","",null,null],[5,"rd_kafka_topic_new","","",null,null],[5,"rd_kafka_topic_destroy","","",null,null],[5,"rd_kafka_topic_name","","",null,null],[5,"rd_kafka_topic_opaque","","",null,null],[5,"rd_kafka_poll","","",null,null],[5,"rd_kafka_yield","","",null,null],[5,"rd_kafka_pause_partitions","","",null,null],[5,"rd_kafka_resume_partitions","","",null,null],[5,"rd_kafka_query_watermark_offsets","","",null,null],[5,"rd_kafka_get_watermark_offsets","","",null,null],[5,"rd_kafka_offsets_for_times","","",null,null],[5,"rd_kafka_mem_free","","",null,null],[5,"rd_kafka_queue_new","","",null,null],[5,"rd_kafka_queue_destroy","","",null,null],[5,"rd_kafka_queue_get_main","","",null,null],[5,"rd_kafka_queue_get_consumer","","",null,null],[5,"rd_kafka_queue_get_partition","","",null,null],[5,"rd_kafka_queue_forward","","",null,null],[5,"rd_kafka_set_log_queue","","",null,null],[5,"rd_kafka_queue_length","","",null,null],[5,"rd_kafka_queue_io_event_enable","","",null,null],[5,"rd_kafka_consume_start","","",null,null],[5,"rd_kafka_consume_start_queue","","",null,null],[5,"rd_kafka_consume_stop","","",null,null],[5,"rd_kafka_seek","","",null,null],[5,"rd_kafka_consume","","",null,null],[5,"rd_kafka_consume_batch","","",null,null],[5,"rd_kafka_consume_callback","","",null,null],[5,"rd_kafka_consume_queue","","",null,null],[5,"rd_kafka_consume_batch_queue","","",null,null],[5,"rd_kafka_consume_callback_queue","","",null,null],[5,"rd_kafka_offset_store","","",null,null],[5,"rd_kafka_offsets_store","","",null,null],[5,"rd_kafka_subscribe","","",null,null],[5,"rd_kafka_unsubscribe","","",null,null],[5,"rd_kafka_subscription","","",null,null],[5,"rd_kafka_consumer_poll","","",null,null],[5,"rd_kafka_consumer_close","","",null,null],[5,"rd_kafka_assign","","",null,null],[5,"rd_kafka_assignment","","",null,null],[5,"rd_kafka_commit","","",null,null],[5,"rd_kafka_commit_message","","",null,null],[5,"rd_kafka_commit_queue","","",null,null],[5,"rd_kafka_committed","","",null,null],[5,"rd_kafka_position","","",null,null],[5,"rd_kafka_produce","","",null,null],[5,"rd_kafka_producev","","",null,null],[5,"rd_kafka_produce_batch","","",null,null],[5,"rd_kafka_flush","","",null,null],[5,"rd_kafka_metadata","","",null,null],[5,"rd_kafka_metadata_destroy","","",null,null],[5,"rd_kafka_list_groups","","",null,null],[5,"rd_kafka_group_list_destroy","","",null,null],[5,"rd_kafka_brokers_add","","",null,null],[5,"rd_kafka_set_logger","","",null,null],[5,"rd_kafka_set_log_level","","",null,null],[5,"rd_kafka_log_print","","",null,null],[5,"rd_kafka_log_syslog","","",null,null],[5,"rd_kafka_outq_len","","",null,null],[5,"rd_kafka_dump","","",null,null],[5,"rd_kafka_thread_cnt","","",null,null],[5,"rd_kafka_wait_destroyed","","",null,null],[5,"rd_kafka_unittest","","",null,null],[5,"rd_kafka_poll_set_consumer","","",null,null],[5,"rd_kafka_event_type","","",null,null],[5,"rd_kafka_event_name","","",null,null],[5,"rd_kafka_event_destroy","","",null,null],[5,"rd_kafka_event_message_next","","",null,null],[5,"rd_kafka_event_message_array","","",null,null],[5,"rd_kafka_event_message_count","","",null,null],[5,"rd_kafka_event_error","","",null,null],[5,"rd_kafka_event_error_string","","",null,null],[5,"rd_kafka_event_opaque","","",null,null],[5,"rd_kafka_event_log","","",null,null],[5,"rd_kafka_event_stats","","",null,null],[5,"rd_kafka_event_topic_partition_list","","",null,null],[5,"rd_kafka_event_topic_partition","","",null,null],[5,"rd_kafka_queue_poll","","",null,null],[5,"rd_kafka_queue_poll_callback","","",null,null],[5,"rd_kafka_conf_interceptor_add_on_conf_set","","",null,null],[5,"rd_kafka_conf_interceptor_add_on_conf_dup","","",null,null],[5,"rd_kafka_conf_interceptor_add_on_conf_destroy","","",null,null],[5,"rd_kafka_conf_interceptor_add_on_new","","",null,null],[5,"rd_kafka_interceptor_add_on_destroy","","",null,null],[5,"rd_kafka_interceptor_add_on_send","","",null,null],[5,"rd_kafka_interceptor_add_on_acknowledgement","","",null,null],[5,"rd_kafka_interceptor_add_on_consume","","",null,null],[5,"rd_kafka_interceptor_add_on_commit","","",null,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"__fsid_t"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",0,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"__mbstate_t"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",1,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"union_unnamed1"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"__wch","","",2,null],[11,"__wchb","","",2,null],[11,"default","","",2,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"_g_fpos_t"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"_g_fpos64_t"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",4,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"_io_marker"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",5,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"__codecvt_result"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"_io_file"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",6,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"imaxdiv_t"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",7,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"__sigset_t"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",8,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"timespec"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",9,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"timeval"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",10,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"fd_set"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",11,{"inputs":[],"output":{"name":"self"}}],[11,"__size","","",12,null],[11,"__align","","",12,null],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",12,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"__pthread_internal_list"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",13,{"inputs":[],"output":{"name":"self"}}],[11,"__data","","",14,null],[11,"__size","","",14,null],[11,"__align","","",14,null],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",14,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"__pthread_mutex_s"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",15,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"pthread_mutexattr_t"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"__size","","",16,null],[11,"__align","","",16,null],[11,"default","","",16,{"inputs":[],"output":{"name":"self"}}],[11,"__data","","",17,null],[11,"__size","","",17,null],[11,"__align","","",17,null],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",17,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"struct_unnamed2"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",18,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"pthread_condattr_t"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"__size","","",19,null],[11,"__align","","",19,null],[11,"default","","",19,{"inputs":[],"output":{"name":"self"}}],[11,"__data","","",20,null],[11,"__size","","",20,null],[11,"__align","","",20,null],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",20,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"struct_unnamed3"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",21,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"pthread_rwlockattr_t"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"__size","","",22,null],[11,"__align","","",22,null],[11,"default","","",22,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"pthread_barrier_t"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"__size","","",23,null],[11,"__align","","",23,null],[11,"default","","",23,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"pthread_barrierattr_t"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"__size","","",24,null],[11,"__align","","",24,null],[11,"default","","",24,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"iovec"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",25,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"__socket_type"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",26,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"default","","",27,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"enum_unnamed4"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"msghdr"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",28,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"cmsghdr"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",29,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"enum_unnamed5"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"linger"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",30,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"osockaddr"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",31,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"enum_unnamed6"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_type_t"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_timestamp_type_t"}}],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_resp_err_t"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_err_desc"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",32,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_topic_partition_s"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",33,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_topic_partition_list_s"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",34,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_vtype_t"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_message_s"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",35,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_conf_res_t"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_metadata_broker"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",36,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_metadata_partition"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",37,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_metadata_topic"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",38,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_metadata"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",39,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_group_member_info"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",40,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_group_info"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",41,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_group_list"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",42,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"__va_list_tag"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",43,{"inputs":[],"output":{"name":"self"}}],[6,"size_t","","",null,null],[6,"__u_char","","",null,null],[6,"__u_short","","",null,null],[6,"__u_int","","",null,null],[6,"__u_long","","",null,null],[6,"__int8_t","","",null,null],[6,"__uint8_t","","",null,null],[6,"__int16_t","","",null,null],[6,"__uint16_t","","",null,null],[6,"__int32_t","","",null,null],[6,"__uint32_t","","",null,null],[6,"__int64_t","","",null,null],[6,"__uint64_t","","",null,null],[6,"__quad_t","","",null,null],[6,"__u_quad_t","","",null,null],[6,"__dev_t","","",null,null],[6,"__uid_t","","",null,null],[6,"__gid_t","","",null,null],[6,"__ino_t","","",null,null],[6,"__ino64_t","","",null,null],[6,"__mode_t","","",null,null],[6,"__nlink_t","","",null,null],[6,"__off_t","","",null,null],[6,"__off64_t","","",null,null],[6,"__pid_t","","",null,null],[6,"__clock_t","","",null,null],[6,"__rlim_t","","",null,null],[6,"__rlim64_t","","",null,null],[6,"__id_t","","",null,null],[6,"__time_t","","",null,null],[6,"__useconds_t","","",null,null],[6,"__suseconds_t","","",null,null],[6,"__daddr_t","","",null,null],[6,"__key_t","","",null,null],[6,"__clockid_t","","",null,null],[6,"__timer_t","","",null,null],[6,"__blksize_t","","",null,null],[6,"__blkcnt_t","","",null,null],[6,"__blkcnt64_t","","",null,null],[6,"__fsblkcnt_t","","",null,null],[6,"__fsblkcnt64_t","","",null,null],[6,"__fsfilcnt_t","","",null,null],[6,"__fsfilcnt64_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"__ssize_t","","",null,null],[6,"__syscall_slong_t","","",null,null],[6,"__syscall_ulong_t","","",null,null],[6,"__loff_t","","",null,null],[6,"__qaddr_t","","",null,null],[6,"__caddr_t","","",null,null],[6,"__intptr_t","","",null,null],[6,"__socklen_t","","",null,null],[6,"FILE","","",null,null],[6,"__FILE","","",null,null],[6,"__gnuc_va_list","","",null,null],[6,"_IO_lock_t","","",null,null],[6,"__io_read_fn","","",null,null],[6,"__io_write_fn","","",null,null],[6,"__io_seek_fn","","",null,null],[6,"__io_close_fn","","",null,null],[6,"va_list","","",null,null],[6,"off_t","","",null,null],[6,"ssize_t","","",null,null],[6,"fpos_t","","",null,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"int_least8_t","","",null,null],[6,"int_least16_t","","",null,null],[6,"int_least32_t","","",null,null],[6,"int_least64_t","","",null,null],[6,"uint_least8_t","","",null,null],[6,"uint_least16_t","","",null,null],[6,"uint_least32_t","","",null,null],[6,"uint_least64_t","","",null,null],[6,"int_fast8_t","","",null,null],[6,"int_fast16_t","","",null,null],[6,"int_fast32_t","","",null,null],[6,"int_fast64_t","","",null,null],[6,"uint_fast8_t","","",null,null],[6,"uint_fast16_t","","",null,null],[6,"uint_fast32_t","","",null,null],[6,"uint_fast64_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"__gwchar_t","","",null,null],[6,"u_char","","",null,null],[6,"u_short","","",null,null],[6,"u_int","","",null,null],[6,"u_long","","",null,null],[6,"quad_t","","",null,null],[6,"u_quad_t","","",null,null],[6,"fsid_t","","",null,null],[6,"loff_t","","",null,null],[6,"ino_t","","",null,null],[6,"dev_t","","",null,null],[6,"gid_t","","",null,null],[6,"mode_t","","",null,null],[6,"nlink_t","","",null,null],[6,"uid_t","","",null,null],[6,"pid_t","","",null,null],[6,"id_t","","",null,null],[6,"daddr_t","","",null,null],[6,"caddr_t","","",null,null],[6,"key_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"clockid_t","","",null,null],[6,"timer_t","","",null,null],[6,"ulong","","",null,null],[6,"ushort","","",null,null],[6,"uint_","","",null,null],[6,"u_int8_t","","",null,null],[6,"u_int16_t","","",null,null],[6,"u_int32_t","","",null,null],[6,"u_int64_t","","",null,null],[6,"register_t","","",null,null],[6,"__sig_atomic_t","","",null,null],[6,"sigset_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"__fd_mask","","",null,null],[6,"fd_mask","","",null,null],[6,"blksize_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"pthread_t","","",null,null],[6,"__pthread_list_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"pthread_once_t","","",null,null],[6,"pthread_spinlock_t","","",null,null],[6,"socklen_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"rd_kafka_t","","",null,null],[6,"rd_kafka_topic_t","","",null,null],[6,"rd_kafka_conf_t","","",null,null],[6,"rd_kafka_topic_conf_t","","",null,null],[6,"rd_kafka_queue_t","","",null,null],[6,"rd_kafka_topic_partition_t","","",null,null],[6,"rd_kafka_topic_partition_list_t","","",null,null],[6,"rd_kafka_message_t","","",null,null],[6,"rd_kafka_metadata_broker_t","","",null,null],[6,"rd_kafka_metadata_partition_t","","",null,null],[6,"rd_kafka_metadata_topic_t","","",null,null],[6,"rd_kafka_metadata_t","","",null,null],[6,"rd_kafka_event_type_t","","",null,null],[6,"rd_kafka_event_t","","",null,null],[6,"rd_kafka_plugin_f_conf_init_t","","",null,null],[6,"rd_kafka_interceptor_f_on_conf_set_t","","",null,null],[6,"rd_kafka_interceptor_f_on_conf_dup_t","","",null,null],[6,"rd_kafka_interceptor_f_on_conf_destroy_t","","",null,null],[6,"rd_kafka_interceptor_f_on_new_t","","",null,null],[6,"rd_kafka_interceptor_f_on_destroy_t","","",null,null],[6,"rd_kafka_interceptor_f_on_send_t","","",null,null],[6,"rd_kafka_interceptor_f_on_acknowledgement_t","","",null,null],[6,"rd_kafka_interceptor_f_on_consume_t","","",null,null],[6,"rd_kafka_interceptor_f_on_commit_t","","",null,null],[6,"__builtin_va_list","","",null,null],[17,"__llvm__","","",null,null],[17,"__clang__","","",null,null],[17,"__clang_major__","","",null,null],[17,"__clang_minor__","","",null,null],[17,"__clang_patchlevel__","","",null,null],[17,"__GNUC_MINOR__","","",null,null],[17,"__GNUC_PATCHLEVEL__","","",null,null],[17,"__GNUC__","","",null,null],[17,"__GXX_ABI_VERSION","","",null,null],[17,"__ATOMIC_RELAXED","","",null,null],[17,"__ATOMIC_CONSUME","","",null,null],[17,"__ATOMIC_ACQUIRE","","",null,null],[17,"__ATOMIC_RELEASE","","",null,null],[17,"__ATOMIC_ACQ_REL","","",null,null],[17,"__ATOMIC_SEQ_CST","","",null,null],[17,"__PRAGMA_REDEFINE_EXTNAME","","",null,null],[17,"__CONSTANT_CFSTRINGS__","","",null,null],[17,"__GXX_RTTI","","",null,null],[17,"__ORDER_LITTLE_ENDIAN__","","",null,null],[17,"__ORDER_BIG_ENDIAN__","","",null,null],[17,"__ORDER_PDP_ENDIAN__","","",null,null],[17,"__BYTE_ORDER__","","",null,null],[17,"__LITTLE_ENDIAN__","","",null,null],[17,"_LP64","","",null,null],[17,"__LP64__","","",null,null],[17,"__CHAR_BIT__","","",null,null],[17,"__SCHAR_MAX__","","",null,null],[17,"__SHRT_MAX__","","",null,null],[17,"__INT_MAX__","","",null,null],[17,"__LONG_MAX__","","",null,null],[17,"__LONG_LONG_MAX__","","",null,null],[17,"__WCHAR_MAX__","","",null,null],[17,"__INTMAX_MAX__","","",null,null],[17,"__SIZE_MAX__","","",null,null],[17,"__UINTMAX_MAX__","","",null,null],[17,"__PTRDIFF_MAX__","","",null,null],[17,"__INTPTR_MAX__","","",null,null],[17,"__UINTPTR_MAX__","","",null,null],[17,"__SIZEOF_DOUBLE__","","",null,null],[17,"__SIZEOF_FLOAT__","","",null,null],[17,"__SIZEOF_INT__","","",null,null],[17,"__SIZEOF_LONG__","","",null,null],[17,"__SIZEOF_LONG_DOUBLE__","","",null,null],[17,"__SIZEOF_LONG_LONG__","","",null,null],[17,"__SIZEOF_POINTER__","","",null,null],[17,"__SIZEOF_SHORT__","","",null,null],[17,"__SIZEOF_PTRDIFF_T__","","",null,null],[17,"__SIZEOF_SIZE_T__","","",null,null],[17,"__SIZEOF_WCHAR_T__","","",null,null],[17,"__SIZEOF_WINT_T__","","",null,null],[17,"__SIZEOF_INT128__","","",null,null],[17,"__INTMAX_WIDTH__","","",null,null],[17,"__PTRDIFF_WIDTH__","","",null,null],[17,"__INTPTR_WIDTH__","","",null,null],[17,"__SIZE_WIDTH__","","",null,null],[17,"__WCHAR_WIDTH__","","",null,null],[17,"__WINT_WIDTH__","","",null,null],[17,"__SIG_ATOMIC_WIDTH__","","",null,null],[17,"__SIG_ATOMIC_MAX__","","",null,null],[17,"__UINTMAX_WIDTH__","","",null,null],[17,"__UINTPTR_WIDTH__","","",null,null],[17,"__FLT_HAS_DENORM__","","",null,null],[17,"__FLT_DIG__","","",null,null],[17,"__FLT_HAS_INFINITY__","","",null,null],[17,"__FLT_HAS_QUIET_NAN__","","",null,null],[17,"__FLT_MANT_DIG__","","",null,null],[17,"__FLT_MAX_10_EXP__","","",null,null],[17,"__FLT_MAX_EXP__","","",null,null],[17,"__FLT_MIN_10_EXP__","","",null,null],[17,"__FLT_MIN_EXP__","","",null,null],[17,"__DBL_HAS_DENORM__","","",null,null],[17,"__DBL_DIG__","","",null,null],[17,"__DBL_HAS_INFINITY__","","",null,null],[17,"__DBL_HAS_QUIET_NAN__","","",null,null],[17,"__DBL_MANT_DIG__","","",null,null],[17,"__DBL_MAX_10_EXP__","","",null,null],[17,"__DBL_MAX_EXP__","","",null,null],[17,"__DBL_MIN_10_EXP__","","",null,null],[17,"__DBL_MIN_EXP__","","",null,null],[17,"__LDBL_HAS_DENORM__","","",null,null],[17,"__LDBL_DIG__","","",null,null],[17,"__LDBL_HAS_INFINITY__","","",null,null],[17,"__LDBL_HAS_QUIET_NAN__","","",null,null],[17,"__LDBL_MANT_DIG__","","",null,null],[17,"__LDBL_MAX_10_EXP__","","",null,null],[17,"__LDBL_MAX_EXP__","","",null,null],[17,"__LDBL_MIN_10_EXP__","","",null,null],[17,"__LDBL_MIN_EXP__","","",null,null],[17,"__POINTER_WIDTH__","","",null,null],[17,"__WINT_UNSIGNED__","","",null,null],[17,"__UINT8_MAX__","","",null,null],[17,"__INT8_MAX__","","",null,null],[17,"__UINT16_MAX__","","",null,null],[17,"__INT16_MAX__","","",null,null],[17,"__UINT32_MAX__","","",null,null],[17,"__INT32_MAX__","","",null,null],[17,"__UINT64_MAX__","","",null,null],[17,"__INT64_MAX__","","",null,null],[17,"__INT_LEAST8_MAX__","","",null,null],[17,"__UINT_LEAST8_MAX__","","",null,null],[17,"__INT_LEAST16_MAX__","","",null,null],[17,"__UINT_LEAST16_MAX__","","",null,null],[17,"__INT_LEAST32_MAX__","","",null,null],[17,"__UINT_LEAST32_MAX__","","",null,null],[17,"__INT_LEAST64_MAX__","","",null,null],[17,"__UINT_LEAST64_MAX__","","",null,null],[17,"__INT_FAST8_MAX__","","",null,null],[17,"__UINT_FAST8_MAX__","","",null,null],[17,"__INT_FAST16_MAX__","","",null,null],[17,"__UINT_FAST16_MAX__","","",null,null],[17,"__INT_FAST32_MAX__","","",null,null],[17,"__UINT_FAST32_MAX__","","",null,null],[17,"__INT_FAST64_MAX__","","",null,null],[17,"__UINT_FAST64_MAX__","","",null,null],[17,"__FINITE_MATH_ONLY__","","",null,null],[17,"__GNUC_STDC_INLINE__","","",null,null],[17,"__GCC_ATOMIC_TEST_AND_SET_TRUEVAL","","",null,null],[17,"__GCC_ATOMIC_BOOL_LOCK_FREE","","",null,null],[17,"__GCC_ATOMIC_CHAR_LOCK_FREE","","",null,null],[17,"__GCC_ATOMIC_CHAR16_T_LOCK_FREE","","",null,null],[17,"__GCC_ATOMIC_CHAR32_T_LOCK_FREE","","",null,null],[17,"__GCC_ATOMIC_WCHAR_T_LOCK_FREE","","",null,null],[17,"__GCC_ATOMIC_SHORT_LOCK_FREE","","",null,null],[17,"__GCC_ATOMIC_INT_LOCK_FREE","","",null,null],[17,"__GCC_ATOMIC_LONG_LOCK_FREE","","",null,null],[17,"__GCC_ATOMIC_LLONG_LOCK_FREE","","",null,null],[17,"__GCC_ATOMIC_POINTER_LOCK_FREE","","",null,null],[17,"__NO_INLINE__","","",null,null],[17,"__FLT_EVAL_METHOD__","","",null,null],[17,"__FLT_RADIX__","","",null,null],[17,"__DECIMAL_DIG__","","",null,null],[17,"__amd64__","","",null,null],[17,"__amd64","","",null,null],[17,"__x86_64","","",null,null],[17,"__x86_64__","","",null,null],[17,"__k8","","",null,null],[17,"__k8__","","",null,null],[17,"__tune_k8__","","",null,null],[17,"__NO_MATH_INLINES","","",null,null],[17,"__SSE2__","","",null,null],[17,"__SSE2_MATH__","","",null,null],[17,"__SSE__","","",null,null],[17,"__SSE_MATH__","","",null,null],[17,"__MMX__","","",null,null],[17,"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1","","",null,null],[17,"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2","","",null,null],[17,"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4","","",null,null],[17,"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8","","",null,null],[17,"unix","","",null,null],[17,"__unix","","",null,null],[17,"__unix__","","",null,null],[17,"linux","","",null,null],[17,"__linux","","",null,null],[17,"__linux__","","",null,null],[17,"__gnu_linux__","","",null,null],[17,"__ELF__","","",null,null],[17,"__STDC__","","",null,null],[17,"__STDC_HOSTED__","","",null,null],[17,"__STDC_VERSION__","","",null,null],[17,"__STDC_UTF_16__","","",null,null],[17,"__STDC_UTF_32__","","",null,null],[17,"_STDIO_H","","",null,null],[17,"_FEATURES_H","","",null,null],[17,"_DEFAULT_SOURCE","","",null,null],[17,"__USE_ISOC11","","",null,null],[17,"__USE_ISOC99","","",null,null],[17,"__USE_ISOC95","","",null,null],[17,"__USE_POSIX_IMPLICITLY","","",null,null],[17,"_POSIX_SOURCE","","",null,null],[17,"_POSIX_C_SOURCE","","",null,null],[17,"__USE_POSIX","","",null,null],[17,"__USE_POSIX2","","",null,null],[17,"__USE_POSIX199309","","",null,null],[17,"__USE_POSIX199506","","",null,null],[17,"__USE_XOPEN2K","","",null,null],[17,"__USE_XOPEN2K8","","",null,null],[17,"_ATFILE_SOURCE","","",null,null],[17,"__USE_MISC","","",null,null],[17,"__USE_ATFILE","","",null,null],[17,"__USE_FORTIFY_LEVEL","","",null,null],[17,"_STDC_PREDEF_H","","",null,null],[17,"__STDC_IEC_559__","","",null,null],[17,"__STDC_IEC_559_COMPLEX__","","",null,null],[17,"__STDC_ISO_10646__","","",null,null],[17,"__STDC_NO_THREADS__","","",null,null],[17,"__GNU_LIBRARY__","","",null,null],[17,"__GLIBC__","","",null,null],[17,"__GLIBC_MINOR__","","",null,null],[17,"_SYS_CDEFS_H","","",null,null],[17,"__WORDSIZE","","",null,null],[17,"__WORDSIZE_TIME64_COMPAT32","","",null,null],[17,"__SYSCALL_WORDSIZE","","",null,null],[17,"_BITS_TYPES_H","","",null,null],[17,"_BITS_TYPESIZES_H","","",null,null],[17,"__OFF_T_MATCHES_OFF64_T","","",null,null],[17,"__INO_T_MATCHES_INO64_T","","",null,null],[17,"__FD_SETSIZE","","",null,null],[17,"__FILE_defined","","",null,null],[17,"____FILE_defined","","",null,null],[17,"_G_config_h","","",null,null],[17,"____mbstate_t_defined","","",null,null],[17,"_G_HAVE_MMAP","","",null,null],[17,"_G_HAVE_MREMAP","","",null,null],[17,"_G_IO_IO_FILE_VERSION","","",null,null],[17,"_G_BUFSIZ","","",null,null],[17,"_IO_BUFSIZ","","",null,null],[17,"_IO_UNIFIED_JUMPTABLES","","",null,null],[17,"EOF","","",null,null],[17,"_IOS_INPUT","","",null,null],[17,"_IOS_OUTPUT","","",null,null],[17,"_IOS_ATEND","","",null,null],[17,"_IOS_APPEND","","",null,null],[17,"_IOS_TRUNC","","",null,null],[17,"_IOS_NOCREATE","","",null,null],[17,"_IOS_NOREPLACE","","",null,null],[17,"_IOS_BIN","","",null,null],[17,"_IO_MAGIC","","",null,null],[17,"_OLD_STDIO_MAGIC","","",null,null],[17,"_IO_MAGIC_MASK","","",null,null],[17,"_IO_USER_BUF","","",null,null],[17,"_IO_UNBUFFERED","","",null,null],[17,"_IO_NO_READS","","",null,null],[17,"_IO_NO_WRITES","","",null,null],[17,"_IO_EOF_SEEN","","",null,null],[17,"_IO_ERR_SEEN","","",null,null],[17,"_IO_DELETE_DONT_CLOSE","","",null,null],[17,"_IO_LINKED","","",null,null],[17,"_IO_IN_BACKUP","","",null,null],[17,"_IO_LINE_BUF","","",null,null],[17,"_IO_TIED_PUT_GET","","",null,null],[17,"_IO_CURRENTLY_PUTTING","","",null,null],[17,"_IO_IS_APPENDING","","",null,null],[17,"_IO_IS_FILEBUF","","",null,null],[17,"_IO_BAD_SEEN","","",null,null],[17,"_IO_USER_LOCK","","",null,null],[17,"_IO_FLAGS2_MMAP","","",null,null],[17,"_IO_FLAGS2_NOTCANCEL","","",null,null],[17,"_IO_FLAGS2_USER_WBUF","","",null,null],[17,"_IO_SKIPWS","","",null,null],[17,"_IO_LEFT","","",null,null],[17,"_IO_RIGHT","","",null,null],[17,"_IO_INTERNAL","","",null,null],[17,"_IO_DEC","","",null,null],[17,"_IO_OCT","","",null,null],[17,"_IO_HEX","","",null,null],[17,"_IO_SHOWBASE","","",null,null],[17,"_IO_SHOWPOINT","","",null,null],[17,"_IO_UPPERCASE","","",null,null],[17,"_IO_SHOWPOS","","",null,null],[17,"_IO_SCIENTIFIC","","",null,null],[17,"_IO_FIXED","","",null,null],[17,"_IO_UNITBUF","","",null,null],[17,"_IO_STDIO","","",null,null],[17,"_IO_DONT_CLOSE","","",null,null],[17,"_IO_BOOLALPHA","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"_IONBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_ctermid","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"_INTTYPES_H","","",null,null],[17,"_STDINT_H","","",null,null],[17,"_BITS_WCHAR_H","","",null,null],[17,"__WCHAR_MAX","","",null,null],[17,"__WCHAR_MIN","","",null,null],[17,"INT8_MIN","","",null,null],[17,"INT16_MIN","","",null,null],[17,"INT32_MIN","","",null,null],[17,"INT8_MAX","","",null,null],[17,"INT16_MAX","","",null,null],[17,"INT32_MAX","","",null,null],[17,"UINT8_MAX","","",null,null],[17,"UINT16_MAX","","",null,null],[17,"UINT32_MAX","","",null,null],[17,"INT_LEAST8_MIN","","",null,null],[17,"INT_LEAST16_MIN","","",null,null],[17,"INT_LEAST32_MIN","","",null,null],[17,"INT_LEAST8_MAX","","",null,null],[17,"INT_LEAST16_MAX","","",null,null],[17,"INT_LEAST32_MAX","","",null,null],[17,"UINT_LEAST8_MAX","","",null,null],[17,"UINT_LEAST16_MAX","","",null,null],[17,"UINT_LEAST32_MAX","","",null,null],[17,"INT_FAST8_MIN","","",null,null],[17,"INT_FAST16_MIN","","",null,null],[17,"INT_FAST32_MIN","","",null,null],[17,"INT_FAST8_MAX","","",null,null],[17,"INT_FAST16_MAX","","",null,null],[17,"INT_FAST32_MAX","","",null,null],[17,"UINT_FAST8_MAX","","",null,null],[17,"UINT_FAST16_MAX","","",null,null],[17,"UINT_FAST32_MAX","","",null,null],[17,"INTPTR_MIN","","",null,null],[17,"INTPTR_MAX","","",null,null],[17,"UINTPTR_MAX","","",null,null],[17,"PTRDIFF_MIN","","",null,null],[17,"PTRDIFF_MAX","","",null,null],[17,"SIG_ATOMIC_MIN","","",null,null],[17,"SIG_ATOMIC_MAX","","",null,null],[17,"SIZE_MAX","","",null,null],[17,"WCHAR_MIN","","",null,null],[17,"WCHAR_MAX","","",null,null],[17,"WINT_MIN","","",null,null],[17,"WINT_MAX","","",null,null],[17,"____gwchar_t_defined","","",null,null],[17,"_SYS_TYPES_H","","",null,null],[17,"__clock_t_defined","","",null,null],[17,"__time_t_defined","","",null,null],[17,"__clockid_t_defined","","",null,null],[17,"__timer_t_defined","","",null,null],[17,"__BIT_TYPES_DEFINED__","","",null,null],[17,"_ENDIAN_H","","",null,null],[17,"__LITTLE_ENDIAN","","",null,null],[17,"__BIG_ENDIAN","","",null,null],[17,"__PDP_ENDIAN","","",null,null],[17,"__BYTE_ORDER","","",null,null],[17,"__FLOAT_WORD_ORDER","","",null,null],[17,"LITTLE_ENDIAN","","",null,null],[17,"BIG_ENDIAN","","",null,null],[17,"PDP_ENDIAN","","",null,null],[17,"BYTE_ORDER","","",null,null],[17,"_BITS_BYTESWAP_H","","",null,null],[17,"_SYS_SELECT_H","","",null,null],[17,"_SIGSET_H_types","","",null,null],[17,"__timespec_defined","","",null,null],[17,"_STRUCT_TIMEVAL","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"_SYS_SYSMACROS_H","","",null,null],[17,"_BITS_PTHREADTYPES_H","","",null,null],[17,"__SIZEOF_PTHREAD_ATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_BARRIER_T","","",null,null],[17,"__SIZEOF_PTHREAD_BARRIERATTR_T","","",null,null],[17,"__have_pthread_attr_t","","",null,null],[17,"__PTHREAD_MUTEX_HAVE_PREV","","",null,null],[17,"__PTHREAD_RWLOCK_INT_FLAGS_SHARED","","",null,null],[17,"_SYS_SOCKET_H","","",null,null],[17,"_SYS_UIO_H","","",null,null],[17,"_BITS_UIO_H","","",null,null],[17,"UIO_MAXIOV","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_FILE","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"PF_MAX","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_FILE","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"AF_MAX","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"_BITS_SOCKADDR_H","","",null,null],[17,"_SS_SIZE","","",null,null],[17,"FIOSETOWN","","",null,null],[17,"SIOCSPGRP","","",null,null],[17,"FIOGETOWN","","",null,null],[17,"SIOCGPGRP","","",null,null],[17,"SIOCATMARK","","",null,null],[17,"SIOCGSTAMP","","",null,null],[17,"SIOCGSTAMPNS","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"LIBRDKAFKA_TYPECHECKS","","",null,null],[17,"RD_KAFKA_VERSION","","",null,null],[17,"RD_KAFKA_OFFSET_BEGINNING","","",null,null],[17,"RD_KAFKA_OFFSET_END","","",null,null],[17,"RD_KAFKA_OFFSET_STORED","","",null,null],[17,"RD_KAFKA_OFFSET_INVALID","","",null,null],[17,"RD_KAFKA_OFFSET_TAIL_BASE","","",null,null],[17,"RD_KAFKA_MSG_F_FREE","","",null,null],[17,"RD_KAFKA_MSG_F_COPY","","",null,null],[17,"RD_KAFKA_MSG_F_BLOCK","","",null,null],[17,"RD_KAFKA_EVENT_NONE","","",null,null],[17,"RD_KAFKA_EVENT_DR","","",null,null],[17,"RD_KAFKA_EVENT_FETCH","","",null,null],[17,"RD_KAFKA_EVENT_LOG","","",null,null],[17,"RD_KAFKA_EVENT_ERROR","","",null,null],[17,"RD_KAFKA_EVENT_REBALANCE","","",null,null],[17,"RD_KAFKA_EVENT_OFFSET_COMMIT","","",null,null],[17,"RD_KAFKA_EVENT_STATS","","",null,null],[0,"helpers","rdkafka_sys","",null,null],[5,"primitive_to_rd_kafka_resp_err_t","rdkafka_sys::helpers","This is not great. For legacy reasons some usage of rd_kafka_resp_err_t is passed as an integer in some places. There seems to be no easy way in Rust to match this the other way around so we do it manually.",null,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[5,"rd_kafka_resp_err_t_to_rdkafka_error","","",null,{"inputs":[{"name":"rdkafkaresperr"}],"output":{"name":"rdkafkaerror"}}],[0,"types","rdkafka_sys","This module contains type aliases for types defined in the auto-generated bindings.",null,null],[4,"RDKafkaType","rdkafka_sys::types","",null,null],[13,"RD_KAFKA_PRODUCER","","",49,null],[13,"RD_KAFKA_CONSUMER","","",49,null],[4,"RDKafkaConfRes","","",null,null],[13,"RD_KAFKA_CONF_UNKNOWN","","",53,null],[13,"RD_KAFKA_CONF_INVALID","","",53,null],[13,"RD_KAFKA_CONF_OK","","",53,null],[4,"RDKafkaRespErr","","",null,null],[13,"RD_KAFKA_RESP_ERR__BEGIN","","",51,null],[13,"RD_KAFKA_RESP_ERR__BAD_MSG","","",51,null],[13,"RD_KAFKA_RESP_ERR__BAD_COMPRESSION","","",51,null],[13,"RD_KAFKA_RESP_ERR__DESTROY","","",51,null],[13,"RD_KAFKA_RESP_ERR__FAIL","","",51,null],[13,"RD_KAFKA_RESP_ERR__TRANSPORT","","",51,null],[13,"RD_KAFKA_RESP_ERR__CRIT_SYS_RESOURCE","","",51,null],[13,"RD_KAFKA_RESP_ERR__RESOLVE","","",51,null],[13,"RD_KAFKA_RESP_ERR__MSG_TIMED_OUT","","",51,null],[13,"RD_KAFKA_RESP_ERR__PARTITION_EOF","","",51,null],[13,"RD_KAFKA_RESP_ERR__UNKNOWN_PARTITION","","",51,null],[13,"RD_KAFKA_RESP_ERR__FS","","",51,null],[13,"RD_KAFKA_RESP_ERR__UNKNOWN_TOPIC","","",51,null],[13,"RD_KAFKA_RESP_ERR__ALL_BROKERS_DOWN","","",51,null],[13,"RD_KAFKA_RESP_ERR__INVALID_ARG","","",51,null],[13,"RD_KAFKA_RESP_ERR__TIMED_OUT","","",51,null],[13,"RD_KAFKA_RESP_ERR__QUEUE_FULL","","",51,null],[13,"RD_KAFKA_RESP_ERR__ISR_INSUFF","","",51,null],[13,"RD_KAFKA_RESP_ERR__NODE_UPDATE","","",51,null],[13,"RD_KAFKA_RESP_ERR__SSL","","",51,null],[13,"RD_KAFKA_RESP_ERR__WAIT_COORD","","",51,null],[13,"RD_KAFKA_RESP_ERR__UNKNOWN_GROUP","","",51,null],[13,"RD_KAFKA_RESP_ERR__IN_PROGRESS","","",51,null],[13,"RD_KAFKA_RESP_ERR__PREV_IN_PROGRESS","","",51,null],[13,"RD_KAFKA_RESP_ERR__EXISTING_SUBSCRIPTION","","",51,null],[13,"RD_KAFKA_RESP_ERR__ASSIGN_PARTITIONS","","",51,null],[13,"RD_KAFKA_RESP_ERR__REVOKE_PARTITIONS","","",51,null],[13,"RD_KAFKA_RESP_ERR__CONFLICT","","",51,null],[13,"RD_KAFKA_RESP_ERR__STATE","","",51,null],[13,"RD_KAFKA_RESP_ERR__UNKNOWN_PROTOCOL","","",51,null],[13,"RD_KAFKA_RESP_ERR__NOT_IMPLEMENTED","","",51,null],[13,"RD_KAFKA_RESP_ERR__AUTHENTICATION","","",51,null],[13,"RD_KAFKA_RESP_ERR__NO_OFFSET","","",51,null],[13,"RD_KAFKA_RESP_ERR__OUTDATED","","",51,null],[13,"RD_KAFKA_RESP_ERR__TIMED_OUT_QUEUE","","",51,null],[13,"RD_KAFKA_RESP_ERR__UNSUPPORTED_FEATURE","","",51,null],[13,"RD_KAFKA_RESP_ERR__WAIT_CACHE","","",51,null],[13,"RD_KAFKA_RESP_ERR__INTR","","",51,null],[13,"RD_KAFKA_RESP_ERR__KEY_SERIALIZATION","","",51,null],[13,"RD_KAFKA_RESP_ERR__VALUE_SERIALIZATION","","",51,null],[13,"RD_KAFKA_RESP_ERR__KEY_DESERIALIZATION","","",51,null],[13,"RD_KAFKA_RESP_ERR__VALUE_DESERIALIZATION","","",51,null],[13,"RD_KAFKA_RESP_ERR__END","","",51,null],[13,"RD_KAFKA_RESP_ERR_UNKNOWN","","",51,null],[13,"RD_KAFKA_RESP_ERR_NO_ERROR","","",51,null],[13,"RD_KAFKA_RESP_ERR_OFFSET_OUT_OF_RANGE","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_MSG","","",51,null],[13,"RD_KAFKA_RESP_ERR_UNKNOWN_TOPIC_OR_PART","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_MSG_SIZE","","",51,null],[13,"RD_KAFKA_RESP_ERR_LEADER_NOT_AVAILABLE","","",51,null],[13,"RD_KAFKA_RESP_ERR_NOT_LEADER_FOR_PARTITION","","",51,null],[13,"RD_KAFKA_RESP_ERR_REQUEST_TIMED_OUT","","",51,null],[13,"RD_KAFKA_RESP_ERR_BROKER_NOT_AVAILABLE","","",51,null],[13,"RD_KAFKA_RESP_ERR_REPLICA_NOT_AVAILABLE","","",51,null],[13,"RD_KAFKA_RESP_ERR_MSG_SIZE_TOO_LARGE","","",51,null],[13,"RD_KAFKA_RESP_ERR_STALE_CTRL_EPOCH","","",51,null],[13,"RD_KAFKA_RESP_ERR_OFFSET_METADATA_TOO_LARGE","","",51,null],[13,"RD_KAFKA_RESP_ERR_NETWORK_EXCEPTION","","",51,null],[13,"RD_KAFKA_RESP_ERR_GROUP_LOAD_IN_PROGRESS","","",51,null],[13,"RD_KAFKA_RESP_ERR_GROUP_COORDINATOR_NOT_AVAILABLE","","",51,null],[13,"RD_KAFKA_RESP_ERR_NOT_COORDINATOR_FOR_GROUP","","",51,null],[13,"RD_KAFKA_RESP_ERR_TOPIC_EXCEPTION","","",51,null],[13,"RD_KAFKA_RESP_ERR_RECORD_LIST_TOO_LARGE","","",51,null],[13,"RD_KAFKA_RESP_ERR_NOT_ENOUGH_REPLICAS","","",51,null],[13,"RD_KAFKA_RESP_ERR_NOT_ENOUGH_REPLICAS_AFTER_APPEND","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_REQUIRED_ACKS","","",51,null],[13,"RD_KAFKA_RESP_ERR_ILLEGAL_GENERATION","","",51,null],[13,"RD_KAFKA_RESP_ERR_INCONSISTENT_GROUP_PROTOCOL","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_GROUP_ID","","",51,null],[13,"RD_KAFKA_RESP_ERR_UNKNOWN_MEMBER_ID","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_SESSION_TIMEOUT","","",51,null],[13,"RD_KAFKA_RESP_ERR_REBALANCE_IN_PROGRESS","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_COMMIT_OFFSET_SIZE","","",51,null],[13,"RD_KAFKA_RESP_ERR_TOPIC_AUTHORIZATION_FAILED","","",51,null],[13,"RD_KAFKA_RESP_ERR_GROUP_AUTHORIZATION_FAILED","","",51,null],[13,"RD_KAFKA_RESP_ERR_CLUSTER_AUTHORIZATION_FAILED","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_TIMESTAMP","","",51,null],[13,"RD_KAFKA_RESP_ERR_UNSUPPORTED_SASL_MECHANISM","","",51,null],[13,"RD_KAFKA_RESP_ERR_ILLEGAL_SASL_STATE","","",51,null],[13,"RD_KAFKA_RESP_ERR_UNSUPPORTED_VERSION","","",51,null],[13,"RD_KAFKA_RESP_ERR_TOPIC_ALREADY_EXISTS","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_PARTITIONS","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_REPLICATION_FACTOR","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_REPLICA_ASSIGNMENT","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_CONFIG","","",51,null],[13,"RD_KAFKA_RESP_ERR_NOT_CONTROLLER","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_REQUEST","","",51,null],[13,"RD_KAFKA_RESP_ERR_UNSUPPORTED_FOR_MESSAGE_FORMAT","","",51,null],[13,"RD_KAFKA_RESP_ERR_POLICY_VIOLATION","","",51,null],[13,"RD_KAFKA_RESP_ERR_OUT_OF_ORDER_SEQUENCE_NUMBER","","",51,null],[13,"RD_KAFKA_RESP_ERR_DUPLICATE_SEQUENCE_NUMBER","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_PRODUCER_EPOCH","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_TXN_STATE","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_PRODUCER_ID_MAPPING","","",51,null],[13,"RD_KAFKA_RESP_ERR_INVALID_TRANSACTION_TIMEOUT","","",51,null],[13,"RD_KAFKA_RESP_ERR_CONCURRENT_TRANSACTIONS","","",51,null],[13,"RD_KAFKA_RESP_ERR_TRANSACTION_COORDINATOR_FENCED","","",51,null],[13,"RD_KAFKA_RESP_ERR_TRANSACTIONAL_ID_AUTHORIZATION_FAILED","","",51,null],[13,"RD_KAFKA_RESP_ERR_SECURITY_DISABLED","","",51,null],[13,"RD_KAFKA_RESP_ERR_OPERATION_NOT_ATTEMPTED","","",51,null],[13,"RD_KAFKA_RESP_ERR_END_ALL","","",51,null],[4,"RDKafkaError","","Errors enum Error from the underlying rdkafka library.",null,null],[13,"BadMessage","","Received message is incorrect",54,null],[13,"BadCompression","","Bad/unknown compression",54,null],[13,"BrokerDestroy","","Broker is going away",54,null],[13,"Fail","","Generic failure",54,null],[13,"BrokerTransportFailure","","Broker transport failure",54,null],[13,"CriticalSystemResource","","Critical system resource",54,null],[13,"Resolve","","Failed to resolve broker",54,null],[13,"MessageTimedOut","","Produced message timed out",54,null],[13,"PartitionEOF","","Reached the end of the topic+partition queue on the broker. Not really an error.",54,null],[13,"UnknownPartition","","Permanent: Partition does not exist in cluster.",54,null],[13,"FileSystem","","File or filesystem error",54,null],[13,"UnknownTopic","","Permanent: Topic does not exist in cluster.",54,null],[13,"AllBrokersDown","","All broker connections are down.",54,null],[13,"InvalidArgument","","Invalid argument, or invalid configuration",54,null],[13,"OperationTimedOut","","Operation timed out",54,null],[13,"QueueFull","","Queue is full",54,null],[13,"ISRInsufficient","","ISR count < required.acks",54,null],[13,"NodeUpdate","","Broker node update",54,null],[13,"SSL","","SSL error",54,null],[13,"WaitingForCoordinator","","Waiting for coordinator to become available.",54,null],[13,"UnknownGroup","","Unknown client group",54,null],[13,"InProgress","","Operation in progress",54,null],[13,"PreviousInProgress","","Previous operation in progress, wait for it to finish.",54,null],[13,"ExistingSubscription","","This operation would interfere with an existing subscription",54,null],[13,"AssignPartitions","","Assigned partitions (rebalance_cb)",54,null],[13,"RevokePartitions","","Revoked partitions (rebalance_cb)",54,null],[13,"Conflict","","Conflicting use",54,null],[13,"State","","Wrong state",54,null],[13,"UnknownProtocol","","Unknown protocol",54,null],[13,"NotImplemented","","Not implemented",54,null],[13,"Authentication","","Authentication failure",54,null],[13,"NoOffset","","No stored offset",54,null],[13,"Outdated","","Outdated",54,null],[13,"TimedOutQueue","","Timed out in queue",54,null],[13,"UnsupportedFeature","","Feature not supported by broker",54,null],[13,"WaitCache","","Awaiting cache update",54,null],[13,"Interrupted","","Operation interrupted (e.g., due to yield))",54,null],[13,"KeySerialization","","Key serialization error",54,null],[13,"ValueSerialization","","Value serialization error",54,null],[13,"KeyDeserialization","","Key deserialization error",54,null],[13,"ValueDeserialization","","Value deserialization error",54,null],[13,"Unknown","","Unknown broker error",54,null],[13,"NoError","","Success",54,null],[13,"OffsetOutOfRange","","Offset out of range",54,null],[13,"InvalidMessage","","Invalid message",54,null],[13,"UnknownTopicOrPartition","","Unknown topic or partition",54,null],[13,"InvalidMessageSize","","Invalid message size",54,null],[13,"LeaderNotAvailable","","Leader not available",54,null],[13,"NotLeaderForPartition","","Not leader for partition",54,null],[13,"RequestTimedOut","","Request timed out",54,null],[13,"BrokerNotAvailable","","Broker not available",54,null],[13,"ReplicaNotAvailable","","Replica not available",54,null],[13,"MessageSizeTooLarge","","Message size too large",54,null],[13,"StaleControllerEpoch","","Stale controller epoch code",54,null],[13,"OffsetMetadataTooLarge","","Offset metadata string too large",54,null],[13,"NetworkException","","Broker disconnected before response received",54,null],[13,"GroupLoadInProgress","","Group coordinator load in progress",54,null],[13,"GroupCoordinatorNotAvailable","","Group coordinator not available",54,null],[13,"NotCoordinatorForGroup","","Not coordinator for group",54,null],[13,"InvalidTopic","","Invalid topic",54,null],[13,"MessageBatchTooLarge","","Message batch larger than configured server segment size",54,null],[13,"NotEnoughReplicas","","Not enough in-sync replicas",54,null],[13,"NotEnoughReplicasAfterAppend","","Message(s) written to insufficient number of in-sync replicas",54,null],[13,"InvalidRequiredAcks","","Invalid required acks value",54,null],[13,"IllegalGeneration","","Specified group generation id is not valid",54,null],[13,"InconsistentGroupProtocol","","Inconsistent group protocol",54,null],[13,"InvalidGroupId","","Invalid group.id",54,null],[13,"UnknownMemberId","","Unknown member",54,null],[13,"InvalidSessionTimeout","","Invalid session timeout",54,null],[13,"RebalanceInProgress","","Group rebalance in progress",54,null],[13,"InvalidCommitOffsetSize","","Commit offset data size is not valid",54,null],[13,"TopicAuthorizationFailed","","Topic authorization failed",54,null],[13,"GroupAuthorizationFailed","","Group authorization failed",54,null],[13,"ClusterAuthorizationFailed","","Cluster authorization failed",54,null],[13,"InvalidTimestamp","","Invalid timestamp",54,null],[13,"UnsupportedSASLMechanism","","Unsupported SASL mechanism",54,null],[13,"IllegalSASLState","","Illegal SASL state",54,null],[13,"UnsupportedVersion","","Unsupported version",54,null],[13,"TopicAlreadyExists","","Topic already exists",54,null],[13,"InvalidPartitions","","Invalid number of partitions",54,null],[13,"InvalidReplicationFactor","","Invalid replication factor",54,null],[13,"InvalidReplicaAssignment","","Invalid replica assignment",54,null],[13,"InvalidConfig","","Invalid config */",54,null],[13,"NotController","","Not controller for cluster",54,null],[13,"InvalidRequest","","Invalid request",54,null],[13,"UnsupportedForMessageFormat","","Message format on broker does not support request",54,null],[13,"PolicyViolation","","Policy violation",54,null],[13,"OutOfOrderSequenceNumber","","Broker received an out of order sequence number",54,null],[13,"DuplicateSequenceNumber","","Broker received a duplicate sequence number",54,null],[13,"InvalidProducerEpoch","","Producer attempted an operation with an old epoch",54,null],[13,"InvalidTransactionalState","","Producer attempted a transactional operation in an invalid state",54,null],[13,"InvalidProducerIdMapping","","Producer attempted to use a producer id which is currently assigned to its transactional id",54,null],[13,"InvalidTransactionTimeout","","Transaction timeout is larger than the maxi value allowed by the broker's max.transaction.timeout.ms",54,null],[13,"ConcurrentTransactions","","Producer attempted to update a transaction while another concurrent operation on the same transaction was ongoing",54,null],[13,"TransactionCoordinatorFenced","","Indicates that the transaction coordinator sending a WriteTxnMarker is no longer the current coordinator for a given producer",54,null],[13,"TransactionalIdAuthorizationFailed","","Transactional Id authorization failed",54,null],[13,"SecurityDisabled","","Security features are disabled",54,null],[13,"OperationNotAttempted","","Operation not attempted",54,null],[6,"RDKafka","","Native rdkafka client",null,null],[6,"RDKafkaConf","","Native rdkafka configuration",null,null],[6,"RDKafkaMessage","","Native rdkafka message",null,null],[6,"RDKafkaTopic","","Native rdkafka topic",null,null],[6,"RDKafkaTopicConf","","Native rdkafka topic configuration",null,null],[6,"RDKafkaTopicPartition","","Native rdkafka topic partition",null,null],[6,"RDKafkaTopicPartitionList","","Native rdkafka topic partition list",null,null],[6,"RDKafkaMetadata","","Native rdkafka metadata container",null,null],[6,"RDKafkaMetadataTopic","","Native rdkafka topic information",null,null],[6,"RDKafkaMetadataPartition","","Native rdkafka partition information",null,null],[6,"RDKafkaMetadataBroker","","Native rdkafka broker information",null,null],[6,"RDKafkaState","","Native rdkafka state",null,null],[6,"RDKafkaGroupList","","Native rdkafka list of groups",null,null],[6,"RDKafkaGroupInfo","","Native rdkafka group information",null,null],[6,"RDKafkaGroupMemberInfo","","Native rdkafka group member information",null,null],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"rdkafkaerror"}}],[11,"from","","",54,{"inputs":[{"name":"rdkafkaresperr"}],"output":{"name":"rdkafkaerror"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",54,{"inputs":[{"name":"self"}],"output":{"name":"str"}}]],"paths":[[3,"__fsid_t"],[3,"__mbstate_t"],[3,"Union_Unnamed1"],[3,"_G_fpos_t"],[3,"_G_fpos64_t"],[3,"_IO_marker"],[3,"_IO_FILE"],[3,"imaxdiv_t"],[3,"__sigset_t"],[3,"timespec"],[3,"timeval"],[3,"fd_set"],[3,"pthread_attr_t"],[3,"__pthread_internal_list"],[3,"pthread_mutex_t"],[3,"__pthread_mutex_s"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"Struct_Unnamed2"],[3,"pthread_condattr_t"],[3,"pthread_rwlock_t"],[3,"Struct_Unnamed3"],[3,"pthread_rwlockattr_t"],[3,"pthread_barrier_t"],[3,"pthread_barrierattr_t"],[3,"iovec"],[3,"sockaddr"],[3,"sockaddr_storage"],[3,"msghdr"],[3,"cmsghdr"],[3,"linger"],[3,"osockaddr"],[3,"rd_kafka_err_desc"],[3,"rd_kafka_topic_partition_s"],[3,"rd_kafka_topic_partition_list_s"],[3,"rd_kafka_message_s"],[3,"rd_kafka_metadata_broker"],[3,"rd_kafka_metadata_partition"],[3,"rd_kafka_metadata_topic"],[3,"rd_kafka_metadata"],[3,"rd_kafka_group_member_info"],[3,"rd_kafka_group_info"],[3,"rd_kafka_group_list"],[3,"__va_list_tag"],[4,"__codecvt_result"],[4,"__socket_type"],[4,"Enum_Unnamed4"],[4,"Enum_Unnamed5"],[4,"Enum_Unnamed6"],[4,"rd_kafka_type_t"],[4,"rd_kafka_timestamp_type_t"],[4,"rd_kafka_resp_err_t"],[4,"rd_kafka_vtype_t"],[4,"rd_kafka_conf_res_t"],[4,"RDKafkaError"]]};
initSearch(searchIndex);
